

----QUIT----(13 August 2023 19:14:09) CuisUniversity-5981.image priorSource: 5713367!

----STARTUP---- (13 August 2023 19:14:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5981.image!


----QUIT----(13 August 2023 19:14:10) CuisUniversity-5981.image priorSource: 10197065!

----STARTUP---- (5 October 2023 17:41:02) as /home/clinux01/Descargas/linux64/linux64/CuisUniversity-5981.image!


Sunday!

Sunday next !

Object subclass: #Calendario
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Chalten'!

!classDefinition: #Calendario category: 'Chalten' stamp: 'ght 10/5/2023 17:44:38'!
Object subclass: #Calendario
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Chalten'!

Object subclass: #Calendario
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TDDCalendario'!

!classDefinition: #Calendario category: 'TDDCalendario' stamp: 'ght 10/5/2023 17:45:04'!
Object subclass: #Calendario
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TDDCalendario'!

TestCase subclass: #TDDCalendarioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TDDCalendario'!

!classDefinition: #TDDCalendarioTest category: 'TDDCalendario' stamp: 'ght 10/5/2023 17:45:43'!
TestCase subclass: #TDDCalendarioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TDDCalendario'!

!classRenamed: #TDDCalendarioTest as: #CalendarioTest stamp: 'ght 10/5/2023 17:46:12'!
Smalltalk renameClassNamed: #TDDCalendarioTest as: #CalendarioTest!
!CalendarioTest methodsFor: 'nil' stamp: 'ght 10/5/2023 17:52:56'!
test01NoHayFeriado

	|calendario|
	
	calendario  = Calendario new.! !
!CalendarioTest methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 17:54:55'!
test01LosDomingosSiempreSonFeriados

	| calendario |
	
	calendario  = Calendario new.
	! !

!methodRemoval: CalendarioTest #test01NoHayFeriado stamp: 'ght 10/5/2023 17:54:59'!
test01NoHayFeriado

	|calendario|
	
	calendario  = Calendario new.!
!CalendarioTest methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 17:58:03' prior: 50650366!
test01LosDomingosSiempreSonFeriados

	| calendario fechaDeHoy proximoDomingo anteriorDomingo |
	
	calendario  := Calendario new.
	fechaDeHoy := Date today.
	proximoDomingo := October / 8 / 2023.
	anteriorDomingo := October / 1 / 2023.
	
	
	
	! !
!CalendarioTest methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:09:57'!
test00LosDomingosSiempreSonFeriados

	| calendario fechaDeHoy proximoDomingo anteriorDomingo |
	
	calendario  := Calendario new.
	fechaDeHoy := Date today.
	proximoDomingo := October / 8 / 2023.
	anteriorDomingo := October / 1 / 2023.
	
	
	self assert: false equals: Calendario esFeriado: fechaDeHoy.
	! !
!CalendarioTest methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:10:13' prior: 50650388!
test00LosDomingosSiempreSonFeriados

	| calendario fechaDeHoy proximoDomingo anteriorDomingo |
	
	calendario  := Calendario new.
	fechaDeHoy := Date today.
	proximoDomingo := October / 8 / 2023.
	anteriorDomingo := October / 1 / 2023.
	
	
	self assert: false equals: calendario esFeriado: fechaDeHoy.
	! !

!methodRemoval: CalendarioTest #test01LosDomingosSiempreSonFeriados stamp: 'ght 10/5/2023 18:10:18'!
test01LosDomingosSiempreSonFeriados

	| calendario fechaDeHoy proximoDomingo anteriorDomingo |
	
	calendario  := Calendario new.
	fechaDeHoy := Date today.
	proximoDomingo := October / 8 / 2023.
	anteriorDomingo := October / 1 / 2023.
	
	
	
	!
!CalendarioTest methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:11:25'!
test01! !
!CalendarioTest methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:11:28' prior: 50650424!
test01
	
	! !

!classDefinition: #HolidayCalendar category: 'TDDCalendario' stamp: 'ght 10/5/2023 18:14:14'!
Object subclass: #HolidayCalendar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TDDCalendario'!
!CalendarioTest methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:14:21' prior: 50650428!
test01
	
	| holidayCalendar aNonHoliday |
	
	holidayCalendar := HolidayCalendar new.
	aNonHoliday := October / 5 / 2023.
	
	self deny: (holidayCalendar isHoliday: aNonHoliday). ! !

!testRun: #CalendarioTest #test01 stamp: 'ght 10/5/2023 18:14:26'!
ERROR!
!HolidayCalendar methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:14:39'!
isHoliday: aNonHoliday 
	self shouldBeImplemented.! !
!HolidayCalendar methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:14:49' prior: 50650450!
isHoliday: aNonHoliday 

	^false.! !

!testRun: #CalendarioTest #test01 stamp: 'ght 10/5/2023 18:14:56'!
PASSED!

!testRun: #CalendarioTest #test00LosDomingosSiempreSonFeriados stamp: 'ght 10/5/2023 18:14:56'!
ERROR!

!testRun: #CalendarioTest #test01 stamp: 'ght 10/5/2023 18:14:56'!
PASSED!

!testRun: #CalendarioTest #test00LosDomingosSiempreSonFeriados stamp: 'ght 10/5/2023 18:14:56'!
ERROR!

!testRun: #CalendarioTest #test01 stamp: 'ght 10/5/2023 18:15:15'!
PASSED!

!testRun: #CalendarioTest #test00LosDomingosSiempreSonFeriados stamp: 'ght 10/5/2023 18:15:15'!
ERROR!

!testRun: #CalendarioTest #test01 stamp: 'ght 10/5/2023 18:15:15'!
PASSED!

!testRun: #CalendarioTest #test00LosDomingosSiempreSonFeriados stamp: 'ght 10/5/2023 18:15:15'!
ERROR!

!testRun: #CalendarioTest #test01 stamp: 'ght 10/5/2023 18:15:40'!
PASSED!

!testRun: #CalendarioTest #test00LosDomingosSiempreSonFeriados stamp: 'ght 10/5/2023 18:15:40'!
ERROR!

!testRun: #CalendarioTest #test01 stamp: 'ght 10/5/2023 18:15:40'!
PASSED!

!testRun: #CalendarioTest #test00LosDomingosSiempreSonFeriados stamp: 'ght 10/5/2023 18:15:40'!
ERROR!
!CalendarioTest methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:15:51'!
test02
	
	| holidayCalendar aNonHoliday |
	
	holidayCalendar := HolidayCalendar new.
	aNonHoliday := October / 5 / 2023.
	
	self deny: (holidayCalendar isHoliday: aNonHoliday). ! !
!HolidayCalendar methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:16:54' prior: 50650455!
isHoliday: aNonHoliday 

	^aNonHoliday = Sunday.! !
!CalendarioTest methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:17:27' prior: 50650493!
test02
	
	| holidayCalendar aNonHoliday |
	
	holidayCalendar := HolidayCalendar new.
	aNonHoliday := October / 8 / 2023.
	
	self assert: (holidayCalendar isHoliday: aNonHoliday) isEqualTo: false. ! !
!CalendarioTest methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:18:11' prior: 50650507!
test02
	
	| holidayCalendar aNonHoliday |
	
	holidayCalendar := HolidayCalendar new.
	aNonHoliday := October / 8 / 2023.
	
	self assert: (holidayCalendar isHoliday: aNonHoliday).! !

!testRun: #CalendarioTest #test02 stamp: 'ght 10/5/2023 18:18:14'!
FAILURE!

!testRun: #CalendarioTest #test02 stamp: 'ght 10/5/2023 18:18:14'!
FAILURE!

!methodRemoval: CalendarioTest #test00LosDomingosSiempreSonFeriados stamp: 'ght 10/5/2023 18:18:26'!
test00LosDomingosSiempreSonFeriados

	| calendario fechaDeHoy proximoDomingo anteriorDomingo |
	
	calendario  := Calendario new.
	fechaDeHoy := Date today.
	proximoDomingo := October / 8 / 2023.
	anteriorDomingo := October / 1 / 2023.
	
	
	self assert: false equals: calendario esFeriado: fechaDeHoy.
	!

!classRemoval: #Calendario stamp: 'ght 10/5/2023 18:18:29'!
Object subclass: #Calendario
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TDDCalendario'!

!testRun: #CalendarioTest #test01 stamp: 'ght 10/5/2023 18:18:32'!
PASSED!

!testRun: #CalendarioTest #test01 stamp: 'ght 10/5/2023 18:18:32'!
PASSED!

!testRun: #CalendarioTest #test02 stamp: 'ght 10/5/2023 18:18:32'!
FAILURE!

!testRun: #CalendarioTest #test02 stamp: 'ght 10/5/2023 18:18:32'!
FAILURE!

!testRun: #CalendarioTest #test02 stamp: 'ght 10/5/2023 18:19:53'!
FAILURE!
!CalendarioTest methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 18:22:35'!
test03
	
	| holidayCalendar aNonHoliday |
	
	holidayCalendar := HolidayCalendar new.
	aNonHoliday := October / 8 / 2023.
	
	self assert: (holidayCalendar isHoliday: aNonHoliday).! !

!classRemoval: #HolidayCalendar stamp: 'ght 10/5/2023 20:05:51'!
Object subclass: #HolidayCalendar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TDDCalendario'!

!classRemoval: #CalendarioTest stamp: 'ght 10/5/2023 20:05:51'!
TestCase subclass: #CalendarioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TDDCalendario'!

Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #MarsRover category: 'Ejercicio 5 - Mars Rover' stamp: 'ght 10/5/2023 20:30:06'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

TestCase subclass: #xxxx
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

TestCase subclass: #TestXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #TestXX category: 'Ejercicio 5 - Mars Rover' stamp: 'ght 10/5/2023 20:30:35'!
TestCase subclass: #TestXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #TestXX category: 'Ejercicio 5 - Mars Rover' stamp: 'ght 10/5/2023 20:36:38'!
TestCase subclass: #TestXX
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #TestXX category: 'Ejercicio 5 - Mars Rover' stamp: 'ght 10/5/2023 20:36:44'!
TestCase subclass: #TestXX
	instanceVariableNames: 'marsRover posicionInicial'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!
!TestXX methodsFor: 'nil' stamp: 'ght 10/5/2023 20:36:36'!
test01
	

	self assert: marsRover posicion equals: posicionInicial. ! !

TestCase subclass: #TestXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #TestXX category: 'Ejercicio 5 - Mars Rover' stamp: 'ght 10/5/2023 20:36:54'!
TestCase subclass: #TestXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 20:40:27' prior: 50650625!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := $N.
	
	aMarsRover := MarsRover new in: anInitialPoint to: aCardinalPoint. 
	
	self assert: aMarsRover position equals: anInitialPoint. ! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 20:41:06'!
ERROR!
!MarsRover methodsFor: 'initialize' stamp: 'ght 10/5/2023 20:41:15'!
in: anInitialPoint to: aCardinalPoint 
	self shouldBeImplemented.! !

!classDefinition: #MarsRover category: 'Ejercicio 5 - Mars Rover' stamp: 'ght 10/5/2023 20:41:55'!
Object subclass: #MarsRover
	instanceVariableNames: 'currentPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #MarsRover category: 'Ejercicio 5 - Mars Rover' stamp: 'ght 10/5/2023 20:41:56'!
Object subclass: #MarsRover
	instanceVariableNames: 'currentPoint pointingTo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!
!MarsRover methodsFor: 'initialize' stamp: 'ght 10/5/2023 20:41:54' prior: 50650654!
in: anInitialPoint to: aCardinalPoint 
	
	currentPoint := anInitialPoint.
	pointingTo := aCardinalPoint. ! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 20:42:05'!
ERROR!
!MarsRover methodsFor: 'category-name' stamp: 'ght 10/5/2023 20:42:12'!
position
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'category-name' stamp: 'ght 10/5/2023 20:42:24' prior: 50650683!
position
	
	^currentPoint .! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 20:42:28'!
PASSED!

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 20:42:28'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 20:45:00' prior: 50650642!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := $N.
	
	aMarsRover := MarsRover new in: anInitialPoint to: aCardinalPoint. 
	
	self assert: anInitialPoint equals: aMarsRover position. ! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 20:45:06'!
PASSED!

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 20:45:06'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 20:45:38' prior: 50650696!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := $N.
	
	aMarsRover := MarsRover new in: anInitialPoint to: aCardinalPoint. 
	
	self assert: anInitialPoint equals: aMarsRover position. 
	self assert: aCardinalPoint equals: aMarsRover cardinalPoint.! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 20:45:42'!
ERROR!
!MarsRover methodsFor: 'category-name' stamp: 'ght 10/5/2023 20:45:47'!
cardinalPoint
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'category-name' stamp: 'ght 10/5/2023 20:45:59' prior: 50650725!
cardinalPoint

	^pointingTo! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 20:46:06'!
PASSED!

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 20:46:06'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 20:46:23' prior: 50650711!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := $N.
	
	aMarsRover := MarsRover new in: anInitialPoint to: aCardinalPoint. 
	
	self assert: aMarsRover position equals:  anInitialPoint.
	self assert: aCardinalPoint equals: aMarsRover cardinalPoint.! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 20:46:24'!
PASSED!

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 20:46:24'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 20:57:43' prior: 50650739!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := $N.
	
	aMarsRover := MarsRover new in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: aMarsRover position equals:  anInitialPoint.
	self assert: aCardinalPoint equals: aMarsRover cardinalPoint.! !
!MarsRover methodsFor: 'initialize' stamp: 'ght 10/5/2023 20:57:57'!
in: anInitialPoint pointingTo: aCardinalPoint 
	
	currentPoint := anInitialPoint.
	pointingTo := aCardinalPoint. ! !

!methodRemoval: MarsRover #in:to: stamp: 'ght 10/5/2023 20:58:09'!
in: anInitialPoint to: aCardinalPoint 
	
	currentPoint := anInitialPoint.
	pointingTo := aCardinalPoint. !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:14:29' prior: 50650756!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #N.
	
	aMarsRover := MarsRover new in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: aMarsRover position equals:  anInitialPoint.
	self assert: aCardinalPoint equals: aMarsRover cardinalPoint.! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:14:30'!
PASSED!

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:14:30'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:14:56' prior: 50650780!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover new in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: aMarsRover position equals:  anInitialPoint.
	self assert: aCardinalPoint equals: aMarsRover cardinalPoint.! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:18:00' prior: 50650797!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: aMarsRover position equals:  anInitialPoint.
	self assert: aCardinalPoint equals: aMarsRover cardinalPoint.! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:18:00'!
ERROR!
!MarsRover class methodsFor: 'initialization' stamp: 'ght 10/5/2023 21:18:07'!
in: anInitialPoint pointingTo: aCardinalPoint 
	self shouldBeImplemented.! !
!MarsRover class methodsFor: 'initialization' stamp: 'ght 10/5/2023 21:18:48' prior: 50650825!
in: anInitialPoint pointingTo: aCardinalPoint 
	^self new in: anInitialPoint pointingTo: aCardinalPoint ! !
!MarsRover class methodsFor: 'initialization' stamp: 'ght 10/5/2023 21:18:59' prior: 50650831!
in: anInitialPoint pointingTo: aCardinalPoint 

	^self new in: anInitialPoint pointingTo: aCardinalPoint ! !
!MarsRover class methodsFor: 'initialization' stamp: 'ght 10/5/2023 21:19:01' prior: 50650838!
in: anInitialPoint pointingTo: aCardinalPoint 

	^self new in: anInitialPoint pointingTo: aCardinalPoint. ! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:19:04'!
PASSED!

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:19:04'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:20:32' prior: 50650810!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint.
	self assert: aCardinalPoint equals: aMarsRover cardinalPoint.! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:20:52' prior: 50650856!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint equals: true.
	self assert: aCardinalPoint equals: aMarsRover cardinalPoint.! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:21:51' prior: 50650869!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint.
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:22:01' prior: 50650883!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: (aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint).
	! !
!MarsRover methodsFor: 'category-name' stamp: 'ght 10/5/2023 21:23:21'!
isIn: aPosition pointingTo: aCardinalPoint
	
	! !
!MarsRover methodsFor: 'category-name' stamp: 'ght 10/5/2023 21:24:47' prior: 50650906!
isIn: aPosition pointingTo: aCardinalPoint
	
	"^currentPoint = aPosition  &   Argument expected ->= aCardinalPoint."! !
!MarsRover methodsFor: 'category-name' stamp: 'ght 10/5/2023 21:25:05' prior: 50650911!
isIn: aPosition pointingTo: aCardinalPoint
	
	^currentPoint = aPosition  &   pointingTo = aCardinalPoint.! !

!methodRemoval: MarsRover #position stamp: 'ght 10/5/2023 21:25:10'!
position
	
	^currentPoint .!

!methodRemoval: MarsRover #cardinalPoint stamp: 'ght 10/5/2023 21:25:20'!
cardinalPoint

	^pointingTo!

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:25:26'!
PASSED!

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:25:26'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:26:00'!
test02
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: (aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:28:30' prior: 50650895!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: (aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test02 stamp: 'ght 10/5/2023 21:28:34'!
test02
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: (aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:31:03'!
test01e
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: (aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:31:05' prior: 50650947!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: (aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test01e stamp: 'ght 10/5/2023 21:31:07'!
test01e
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	self assert: (aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:32:32' prior: 50650980!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover proccessCommandList: ''.
	
	self assert: (aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint).
	! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:33:06'!
ERROR!
!MarsRover methodsFor: 'category-name' stamp: 'ght 10/5/2023 21:33:42'!
proccessCommandList: aRenameMe1 
	self shouldBeImplemented.! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:34:12' prior: 50651002!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: ''.
	
	self assert: (aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint).
	! !
!MarsRover methodsFor: 'category-name' stamp: 'ght 10/5/2023 21:35:05' prior: 50651016!
proccessCommandList: aRenameMe1 
	
	! !
!MarsRover methodsFor: 'category-name' stamp: 'ght 10/5/2023 21:35:12' prior: 50651034!
proccessCommandList: aProcessCommandList 
	
	! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:36:05'!
ERROR!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:36:14' prior: 50651021!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover proccessCommandList: ''.
	
	self assert: (aMarsRover isIn: anInitialPoint pointingTo: aCardinalPoint).
	! !

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:36:15'!
PASSED!

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:36:15'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:38:30' prior: 50651045!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover in: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover proccessCommandList: ''.
	
	self assert: (aMarsRover isAt: anInitialPoint pointingTo: aCardinalPoint).
	! !
!MarsRover methodsFor: 'assertions' stamp: 'ght 10/5/2023 21:38:39'!
isAt: aPosition pointingTo: aCardinalPoint
	
	^currentPoint = aPosition  &   pointingTo = aCardinalPoint.! !

!methodRemoval: MarsRover #isIn:pointingTo: stamp: 'ght 10/5/2023 21:38:41'!
isIn: aPosition pointingTo: aCardinalPoint
	
	^currentPoint = aPosition  &   pointingTo = aCardinalPoint.!

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:38:46'!
PASSED!

!testRun: #TestXX #test01 stamp: 'ght 10/5/2023 21:38:46'!
PASSED!
!MarsRover class methodsFor: 'initialization' stamp: 'ght 10/5/2023 21:39:30'!
at: anInitialPoint pointingTo: aCardinalPoint 

	^self new in: anInitialPoint pointingTo: aCardinalPoint. ! !
!MarsRover methodsFor: 'initialize' stamp: 'ght 10/5/2023 21:39:30'!
at: anInitialPoint pointingTo: aCardinalPoint 
	
	currentPoint := anInitialPoint.
	pointingTo := aCardinalPoint. ! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:39:30' prior: 50651062!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover proccessCommandList: ''.
	
	self assert: (aMarsRover isAt: anInitialPoint pointingTo: aCardinalPoint).
	! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:39:30' prior: 50650845!
in: anInitialPoint pointingTo: aCardinalPoint 

	^self new at: anInitialPoint pointingTo: aCardinalPoint. ! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:39:30' prior: 50651090!
at: anInitialPoint pointingTo: aCardinalPoint 

	^self new at: anInitialPoint pointingTo: aCardinalPoint. ! !

!methodRemoval: MarsRover class #in:pointingTo: stamp: 'ght 10/5/2023 21:39:30'!
in: anInitialPoint pointingTo: aCardinalPoint 

	^self new at: anInitialPoint pointingTo: aCardinalPoint. !

!methodRemoval: MarsRover #in:pointingTo: stamp: 'ght 10/5/2023 21:39:30'!
in: anInitialPoint pointingTo: aCardinalPoint 
	
	currentPoint := anInitialPoint.
	pointingTo := aCardinalPoint. !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:42:09'!
test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: ''.
	
	self assert: (aMarsRover isAt: anInitialPoint pointingTo: aCardinalPoint).
	! !
!MarsRover methodsFor: 'processing' stamp: 'ght 10/5/2023 21:42:17'!
processCommandList: aProcessCommandList 
	
	! !

!methodRemoval: MarsRover #proccessCommandList: stamp: 'ght 10/5/2023 21:42:19'!
proccessCommandList: aProcessCommandList 
	
	!

!methodRemoval: TestXX #test01 stamp: 'ght 10/5/2023 21:42:24'!
test01
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover proccessCommandList: ''.
	
	self assert: (aMarsRover isAt: anInitialPoint pointingTo: aCardinalPoint).
	!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/5/2023 21:42:27'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/5/2023 21:42:27'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/5/2023 21:42:33'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/5/2023 21:42:33'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:42:50'!
test02
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: ''.
	
	self assert: (aMarsRover isAt: anInitialPoint pointingTo: aCardinalPoint).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:43:51' prior: 50651190!
test02
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'f'.
	
	self assert: (aMarsRover isAt: anInitialPoint pointingTo: aCardinalPoint).
	! !

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:44:03'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/5/2023 21:44:03'!
PASSED!

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:44:03'!
PASSED!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/5/2023 21:45:16' prior: 50651155!
processCommandList: aProcessCommandList 
	
	(aProcessCommandList = 'b') ifTrue: [
		pointingTo 
		] 
	! !
!MarsRover methodsFor: 'processing' stamp: 'ght 10/5/2023 21:46:05' prior: 50651224!
processCommandList: aProcessCommandList 
	
	(aProcessCommandList = 'f') ifTrue: [
		currentPoint := currentPoint 
		] 
	! !
!MarsRover methodsFor: 'processing' stamp: 'ght 10/5/2023 21:46:33' prior: 50651230!
processCommandList: aProcessCommandList 
	
	(aProcessCommandList = 'f') ifTrue: [
		currentPoint := (currentPoint x) @ (currentPoint y + 1). 
		] 
	! !
!MarsRover methodsFor: 'processing' stamp: 'ght 10/5/2023 21:46:39' prior: 50651237!
processCommandList: aProcessCommandList 
	
	(aProcessCommandList = 'f') ifTrue: [
		currentPoint := (currentPoint x) @ (currentPoint y + 1). 
		] 
	
	! !

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:46:43'!
FAILURE!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:47:16' prior: 50651203!
test02
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
	
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'f'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: aCardinalPoint).
	! !

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:47:17'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/5/2023 21:47:17'!
PASSED!

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:47:17'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/5/2023 21:48:24' prior: 50651255!
test02
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'f'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: aCardinalPoint).
	! !
!MarsRover methodsFor: 'processing' stamp: 'ght 10/5/2023 21:49:08' prior: 50651245!
processCommandList: aProcessCommandList 
	
	(aProcessCommandList = 'f') ifTrue: [
		currentPoint := currentPoint + (0@1). 
		] 
	
	! !

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:49:12'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/5/2023 21:49:12'!
PASSED!

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:49:12'!
PASSED!

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:50:02'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/5/2023 21:50:02'!
PASSED!

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:50:02'!
PASSED!

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:50:28'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/5/2023 21:50:28'!
PASSED!

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:50:28'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/5/2023 21:50:34'!
PASSED!

!testRun: #TestXX #test02 stamp: 'ght 10/5/2023 21:50:34'!
PASSED!

----SNAPSHOT----(5 October 2023 21:56:02) CuisUniversity-5981.image priorSource: 10197292!

----SNAPSHOT----(5 October 2023 21:56:04) CuisUniversity-5981.image priorSource: 10229530!

----STARTUP---- (8 October 2023 11:53:23) as D:\UBA 2023\Inge1\CUIS\windows64\windows64\CuisUniversity-5981.image!


!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 11:53:44'!
PASSED!

!testRun: #TestXX #test02 stamp: 'ght 10/8/2023 11:53:44'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:07:18'!
test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'f'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test02 stamp: 'ght 10/8/2023 12:07:23'!
test02
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'f'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: aCardinalPoint).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:07:39'!
test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'f'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: aCardinalPoint).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:07:49'!
test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'f'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:07:58'!
test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'f'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: aCardinalPoint).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:08:43' prior: 50651378!
test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'ff'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: aCardinalPoint).
	! !

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:08:45'!
FAILURE!

----End fileIn of D:\UBA 2023\Inge1\CUIS\windows64\windows64\Packages\TerseGuide.pck.st----!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:12:37' prior: 50651287!
processCommandList: aProcessCommandList 
	
	(aProcessCommandList hasEqualElements: 'f') ifTrue: [
		currentPoint := currentPoint + (0@1). 
		] 
	
	! !

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:12:42'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:12:42'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:12:42'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:12:42'!
FAILURE!

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:12:42'!
FAILURE!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:12:53'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:12:58'!
PASSED!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:13:16' prior: 50654346!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | currentPoint + (0@1)].
	! !

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:13:20'!
FAILURE!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:13:30'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:13:30'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:13:30'!
FAILURE!

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:13:30'!
FAILURE!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:13:47'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:14:43' prior: 50654382!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | currentPoint := currentPoint + (0@1)].
	! !

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:14:49'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:14:49'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:14:49'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:14:49'!
FAILURE!

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:14:49'!
FAILURE!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:16:15'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:16:15'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:16:15'!
FAILURE!

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:16:15'!
FAILURE!

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:16:22'!
FAILURE!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:16:41' prior: 50651408!
test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'ff'.
	
	self assert: (aMarsRover isAt: 0@2 pointingTo: aCardinalPoint).
	! !

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:16:45'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:16:45'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:16:45'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:16:45'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:16:53' prior: 50654461!
test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@2 pointingTo: aCardinalPoint).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:16:55' prior: 50654492!
test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@3 pointingTo: aCardinalPoint).
	! !

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:16:56'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:16:56'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:16:56'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:16:56'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:18:15'!
test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'b'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: aCardinalPoint).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:18:25'!
test03MarsRoverMovesMultipleStepForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@3 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:18:29'!
test03MarsRoverMovesOneStepForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@3 pointingTo: aCardinalPoint).
	!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:18:32'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:18:32'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:18:32'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:18:32'!
PASSED!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:18:32'!
FAILURE!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:18:32'!
FAILURE!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:18:37'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:18:43'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:18:48'!
PASSED!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:18:52'!
FAILURE!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:18:52'!
FAILURE!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:19:07'!
FAILURE!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:19:07'!
FAILURE!

-1!

-1!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:19:33'!
FAILURE!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:21:01'!
FAILURE!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:21:12'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:22:58' prior: 50654413!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $b ifTrue: [currentPoint := currentPoint - (0@1)].
		currentPoint := currentPoint + (0@1)].
	! !

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:23:04'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:23:13' prior: 50654647!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = 'b' ifTrue: [currentPoint := currentPoint - (0@1)].
		currentPoint := currentPoint + (0@1)].
	! !

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:23:14'!
FAILURE!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:26:13'!
FAILURE!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:27:18'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:28:49' prior: 50654660!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $f ifTrue: [currentPoint := currentPoint - (0@1)].
		currentPoint := currentPoint + (0@1)].
	! !
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:28:53' prior: 50654682!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $b ifTrue: [currentPoint := currentPoint - (0@1)].
		currentPoint := currentPoint + (0@1)].
	! !

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:29:04'!
FAILURE!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:30:33'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:34:22' prior: 50654691!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $b ifTrue: [currentPoint := currentPoint - (0@1)]
					    ifFalse:[	currentPoint := currentPoint + (0@1)]
	]
	! !

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:34:24'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:34:24'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:34:24'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:34:24'!
PASSED!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:34:24'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:35:24'!
test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'b'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: aCardinalPoint).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:35:36'!
test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@3 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test03MarsRoverMovesMultipleStepForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:35:36'!
test03MarsRoverMovesMultipleStepForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@3 pointingTo: aCardinalPoint).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:35:46' prior: 50654739!
test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: aCardinalPoint).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:35:57' prior: 50654783!
test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	! !

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB stamp: 'ght 10/8/2023 12:35:58'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:35:58'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:35:58'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:35:58'!
PASSED!

!testRun: #TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:35:58'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB stamp: 'ght 10/8/2023 12:35:58'!
PASSED!

!methodRemoval: TestXX #test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB stamp: 'ght 10/8/2023 12:36:22'!
test04MarsRoverMovesOneStepBackwardWhenProcessingCommandListWithSingleB
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'b'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: aCardinalPoint).
	!

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB stamp: 'ght 10/8/2023 12:36:27'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:36:27'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:36:27'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:36:27'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB stamp: 'ght 10/8/2023 12:36:27'!
PASSED!

----SNAPSHOT----(8 October 2023 12:36:42) CuisUniversity-5981.image priorSource: 10229622!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:37:19' prior: 50654709!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = 'b' ifTrue: [currentPoint := currentPoint - (0@1)]
					    ifFalse:[	currentPoint := currentPoint + (0@1)]
	]
	! !

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB stamp: 'ght 10/8/2023 12:37:21'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:37:32' prior: 50654877!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $b ifTrue: [currentPoint := currentPoint - (0@1)]
					    ifFalse:[	currentPoint := currentPoint + (0@1)]
	]
	! !

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB stamp: 'ght 10/8/2023 12:37:34'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:37:34'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:37:34'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:37:34'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB stamp: 'ght 10/8/2023 12:37:34'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:40:27'!
test05MarsRoverMovesMultipleStepsForwardAndBackwardWhenProcessingMultipleCommandsForwardAndBackwards
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fbbfb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:40:34'!
test06MarsRoverMovesMultipleStepsForwardAndBackwardWhenProcessingMultipleCommandsForwardAndBackwards
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fbbfb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test05MarsRoverMovesMultipleStepsForwardAndBackwardWhenProcessingMultipleCommandsForwardAndBackwards stamp: 'ght 10/8/2023 12:40:41'!
test05MarsRoverMovesMultipleStepsForwardAndBackwardWhenProcessingMultipleCommandsForwardAndBackwards
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fbbfb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	!

!testRun: #TestXX #test06MarsRoverMovesMultipleStepsForwardAndBackwardWhenProcessingMultipleCommandsForwardAndBackwards stamp: 'ght 10/8/2023 12:40:44'!
FAILURE!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:40:53' prior: 50654936!
test06MarsRoverMovesMultipleStepsForwardAndBackwardWhenProcessingMultipleCommandsForwardAndBackwards
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fbbfb'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: aCardinalPoint).
	! !

!testRun: #TestXX #test06MarsRoverMovesMultipleStepsForwardAndBackwardWhenProcessingMultipleCommandsForwardAndBackwards stamp: 'ght 10/8/2023 12:40:54'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:40:55'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:40:55'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:40:55'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB stamp: 'ght 10/8/2023 12:40:55'!
PASSED!

!testRun: #TestXX #test06MarsRoverMovesMultipleStepsForwardAndBackwardWhenProcessingMultipleCommandsForwardAndBackwards stamp: 'ght 10/8/2023 12:40:55'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:41:12'!
a_testxx
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fbbfb'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test06MarsRoverMovesMultipleStepsForwardAndBackwardWhenProcessingMultipleCommandsForwardAndBackwards stamp: 'ght 10/8/2023 12:41:17'!
test06MarsRoverMovesMultipleStepsForwardAndBackwardWhenProcessingMultipleCommandsForwardAndBackwards
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fbbfb'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: aCardinalPoint).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:44:19'!
test06MarsRoverMoves
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	! !

!testRun: #TestXX #test06MarsRoverMoves stamp: 'ght 10/8/2023 12:44:19'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:44:20'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:44:20'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:44:20'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB stamp: 'ght 10/8/2023 12:44:20'!
PASSED!

!testRun: #TestXX #test06MarsRoverMoves stamp: 'ght 10/8/2023 12:44:20'!
PASSED!

!testRun: #TestXX #test06MarsRoverMoves stamp: 'ght 10/8/2023 12:44:20'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:44:20'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:44:20'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:44:20'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB stamp: 'ght 10/8/2023 12:44:20'!
PASSED!

!testRun: #TestXX #test06MarsRoverMoves stamp: 'ght 10/8/2023 12:44:20'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:45:36'!
test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleFs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@3 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleF stamp: 'ght 10/8/2023 12:45:36'!
test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@3 pointingTo: aCardinalPoint).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:46:58'!
test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleBs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB stamp: 'ght 10/8/2023 12:46:59'!
test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleB
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:47:08' prior: 50655016!
a_testxx
	
	"|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fbbfb'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: aCardinalPoint)."
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:48:15'!
test06MarsRoverPointToLeftWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test06MarsRoverMoves stamp: 'ght 10/8/2023 12:48:19'!
test06MarsRoverMoves
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:48:28' prior: 50655174!
test06MarsRoverPointToLeftWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	! !

!testRun: #TestXX #test06MarsRoverPointToLeftWhenProcessingCommandL stamp: 'ght 10/8/2023 12:48:29'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:48:42' prior: 50654891!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l ifTrue: [currentPoint := currentPoint - (0@1)]
					    ifFalse:[	currentPoint := currentPoint + (0@1)]
	]
	! !
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:50:13' prior: 50655217!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l ifTrue: [currentPoint := currentPoint - (0@1)]
					    ifFalse:[	
					    aCommand = $b ifTrue: [currentPoint := currentPoint - (0@1)]
					    				ifFalse:[	currentPoint := currentPoint + (0@1)]]
	]
	! !
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:51:20' prior: 50655227!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l ifTrue: [pointingTo := #West]
					    ifFalse:[	
					    aCommand = $b ifTrue: [currentPoint := currentPoint - (0@1)]
					    				ifFalse:[	currentPoint := currentPoint + (0@1)]]
	]
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:51:42' prior: 50655200!
test06MarsRoverPointToLeftWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	! !

!testRun: #TestXX #test06MarsRoverPointToLeftWhenProcessingCommandL stamp: 'ght 10/8/2023 12:52:12'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 12:52:12'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 12:52:12'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleFs stamp: 'ght 10/8/2023 12:52:12'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleBs stamp: 'ght 10/8/2023 12:52:12'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointToLeftWhenProcessingCommandL stamp: 'ght 10/8/2023 12:52:12'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:52:46'!
test06MarsRoverMovesToLeftWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	! !

!methodRemoval: TestXX #test06MarsRoverMovesToLeftWhenProcessingCommandL stamp: 'ght 10/8/2023 12:53:00'!
test06MarsRoverMovesToLeftWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:53:44'!
test07MarsRoverMovesForwardToLeftAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 12:53:56' prior: 50655316!
test07MarsRoverMovesForwardToLeftAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #West).
	! !

!testRun: #TestXX #test07MarsRoverMovesForwardToLeftAfterProcessingCommandL stamp: 'ght 10/8/2023 12:54:36'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 12:56:26' prior: 50655240!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l 
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				aCommand = $b
					ifTrue: 
						[currentPoint := currentPoint - (0@1)]
					ifFalse:
						[currentPoint := currentPoint + (0@1)]
			]
	]
	! !

!testRun: #TestXX #test07MarsRoverMovesForwardToLeftAfterProcessingCommandL stamp: 'ght 10/8/2023 12:56:28'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 13:00:17' prior: 50655347!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l 
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				aCommand = $b
					ifTrue: 
						[currentPoint := currentPoint - (0@1)]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (-1@0)] 
							ifFalse: [currentPoint := currentPoint + (0@1)]
							
						]
			]
	]
	! !

!testRun: #TestXX #test07MarsRoverMovesForwardToLeftAfterProcessingCommandL stamp: 'ght 10/8/2023 13:00:19'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 13:00:19'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 13:00:19'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleFs stamp: 'ght 10/8/2023 13:00:19'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleBs stamp: 'ght 10/8/2023 13:00:19'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointToLeftWhenProcessingCommandL stamp: 'ght 10/8/2023 13:00:19'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToLeftAfterProcessingCommandL stamp: 'ght 10/8/2023 13:00:19'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 13:00:25'!
PASSED!

!testRun: #TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 13:00:25'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleFs stamp: 'ght 10/8/2023 13:00:25'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleBs stamp: 'ght 10/8/2023 13:00:25'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointToLeftWhenProcessingCommandL stamp: 'ght 10/8/2023 13:00:25'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToLeftAfterProcessingCommandL stamp: 'ght 10/8/2023 13:00:25'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:01:17'!
test07MarsRoverMovesBackwardsToLeftAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #West).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:01:28'!
test08MarsRoverMovesBackwardsToLeftAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #West).
	! !

!methodRemoval: TestXX #test07MarsRoverMovesBackwardsToLeftAfterProcessingCommandL stamp: 'ght 10/8/2023 13:01:29'!
test07MarsRoverMovesBackwardsToLeftAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #West).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:01:46'!
test05MarsRoverMovesMultipleStepsBackwardsWhenProcessingCommandListWithMultipleBs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleBs stamp: 'ght 10/8/2023 13:01:46'!
test05MarsRoverMovesMultipleStepsBackwardWhenProcessingCommandListWithMultipleBs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:02:20' prior: 50655443!
test08MarsRoverMovesBackwardsToLeftAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lb'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #West).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:02:23' prior: 50655502!
test08MarsRoverMovesBackwardsToLeftAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lb'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: #West).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:03:05'!
test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lb'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: #West).
	! !

!methodRemoval: TestXX #test08MarsRoverMovesBackwardsToLeftAfterProcessingCommandL stamp: 'ght 10/8/2023 13:03:05'!
test08MarsRoverMovesBackwardsToLeftAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lb'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: #West).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:03:17'!
test07MarsRoverMovesForwardToWestAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #West).
	! !

!methodRemoval: TestXX #test07MarsRoverMovesForwardToLeftAfterProcessingCommandL stamp: 'ght 10/8/2023 13:03:17'!
test07MarsRoverMovesForwardToLeftAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #West).
	!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 13:03:49'!
FAILURE!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:04:35'!
test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test05MarsRoverMovesMultipleStepsBackwardsWhenProcessingCommandListWithMultipleBs stamp: 'ght 10/8/2023 13:04:36'!
test05MarsRoverMovesMultipleStepsBackwardsWhenProcessingCommandListWithMultipleBs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	!

!methodRemoval: TestXX #test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF stamp: 'ght 10/8/2023 13:04:43'!
test02MarsRoverMovesOneStepForwardWhenProcessingCommandListWithSingleF
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'f'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: aCardinalPoint).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:05:04'!
test03MarsRoverMovesForwardWhenProcessingCommandListWithFs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@3 pointingTo: aCardinalPoint).
	! !

!methodRemoval: TestXX #test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleFs stamp: 'ght 10/8/2023 13:05:04'!
test03MarsRoverMovesMultipleStepsForwardWhenProcessingCommandListWithMultipleFs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@3 pointingTo: aCardinalPoint).
	!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 13:07:13' prior: 50655363!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l 
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [currentPoint := currentPoint - (0@1)]
							
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (-1@0)] 
							ifFalse: [currentPoint := currentPoint + (0@1)]
							
						]
			]
	]
	! !

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 13:07:21'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 13:07:21'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'ght 10/8/2023 13:07:21'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'ght 10/8/2023 13:07:21'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointToLeftWhenProcessingCommandL stamp: 'ght 10/8/2023 13:07:21'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'ght 10/8/2023 13:07:21'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 13:07:21'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:09:19'!
test06MarsRoverPointToWestWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	! !

!methodRemoval: TestXX #test06MarsRoverPointToLeftWhenProcessingCommandL stamp: 'ght 10/8/2023 13:09:19'!
test06MarsRoverPointToLeftWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:10:19'!
test09MarsRoverPointToEastWhenProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #East).
	! !

!testRun: #TestXX #test09MarsRoverPointToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 13:10:27'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 13:11:30' prior: 50655663!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l 
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				pointingTo := #East.				
				aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [currentPoint := currentPoint - (0@1)]
							
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (-1@0)] 
							ifFalse: [currentPoint := currentPoint + (0@1)]
							
						]
			]
	]
	! !

!testRun: #TestXX #test09MarsRoverPointToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 13:11:37'!
FAILURE!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:11:55' prior: 50655735!
test09MarsRoverPointToEastWhenProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'r'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #East).
	! !

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 13:11:57'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'ght 10/8/2023 13:11:57'!
FAILURE!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'ght 10/8/2023 13:11:57'!
FAILURE!

!testRun: #TestXX #test06MarsRoverPointToWestWhenProcessingCommandL stamp: 'ght 10/8/2023 13:11:57'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'ght 10/8/2023 13:11:57'!
FAILURE!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 13:11:57'!
FAILURE!

!testRun: #TestXX #test09MarsRoverPointToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 13:11:57'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 13:13:07' prior: 50655752!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l 
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [pointingTo := #East] 
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [currentPoint := currentPoint - (0@1)]
							
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (-1@0)] 
							ifFalse: [currentPoint := currentPoint + (0@1)]
							
						]
					] 						
				
			]
	]
	! !

!testRun: #TestXX #test09MarsRoverPointToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 13:13:13'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 13:13:13'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'ght 10/8/2023 13:13:13'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'ght 10/8/2023 13:13:13'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointToWestWhenProcessingCommandL stamp: 'ght 10/8/2023 13:13:13'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'ght 10/8/2023 13:13:13'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 13:13:13'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 13:13:13'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:13:41'!
test06MarsRoverPointsToWestWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	! !

!methodRemoval: TestXX #test06MarsRoverPointToWestWhenProcessingCommandL stamp: 'ght 10/8/2023 13:13:41'!
test06MarsRoverPointToWestWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:13:49'!
test09MarsRoverPointsToEastWhenProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'r'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #East).
	! !

!methodRemoval: TestXX #test09MarsRoverPointToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 13:13:49'!
test09MarsRoverPointToEastWhenProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'r'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #East).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:15:11'!
test10MarsRoverMovesForwardToEastAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rf'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: #East).
	! !

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 13:15:14'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'ght 10/8/2023 13:15:14'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'ght 10/8/2023 13:15:14'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'ght 10/8/2023 13:15:14'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'ght 10/8/2023 13:15:14'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 13:15:14'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 13:15:15'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'ght 10/8/2023 13:15:15'!
FAILURE!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'ght 10/8/2023 13:15:15'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 13:18:29' prior: 50655815!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l 
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [pointingTo := #East] 
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [currentPoint := currentPoint - (0@1)]
							
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (-1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [currentPoint := currentPoint + (0@1)]
								
								]
							
						]
					] 						
				
			]
	]
	! !

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'ght 10/8/2023 13:18:31'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 13:18:31'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'ght 10/8/2023 13:18:31'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'ght 10/8/2023 13:18:31'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'ght 10/8/2023 13:18:31'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'ght 10/8/2023 13:18:31'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 13:18:31'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 13:18:31'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'ght 10/8/2023 13:18:31'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:20:16'!
test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rb'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #West).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:20:29' prior: 50656026!
test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rb'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #East).
	! !

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'ght 10/8/2023 13:20:43'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 13:21:59' prior: 50655967!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l 
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [pointingTo := #East] 
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #West 
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (-1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [currentPoint := currentPoint + (0@1)]
								
								]
							
						]
					] 						
				
			]
	]
	! !

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'ght 10/8/2023 13:22:01'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 13:22:10' prior: 50656058!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l 
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [pointingTo := #East] 
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (-1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [currentPoint := currentPoint + (0@1)]
								
								]
							
						]
					] 						
				
			]
	]
	! !

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'ght 10/8/2023 13:22:12'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 13:22:12'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'ght 10/8/2023 13:22:12'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'ght 10/8/2023 13:22:12'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'ght 10/8/2023 13:22:12'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'ght 10/8/2023 13:22:12'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 13:22:12'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 13:22:12'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'ght 10/8/2023 13:22:12'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'ght 10/8/2023 13:22:12'!
PASSED!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 13:22:26' prior: 50656091!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l 
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [pointingTo := #East] 
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [currentPoint := currentPoint + (0@1)]
								
								]
							
						]
					] 						
				
			]
	]
	! !

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'ght 10/8/2023 13:22:31'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 13:22:32'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'ght 10/8/2023 13:22:32'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'ght 10/8/2023 13:22:32'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'ght 10/8/2023 13:22:32'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'ght 10/8/2023 13:22:32'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 13:22:32'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 13:22:32'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'ght 10/8/2023 13:22:32'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'ght 10/8/2023 13:22:32'!
PASSED!

!methodRemoval: TestXX #a_testxx stamp: 'ght 10/8/2023 13:22:43'!
a_testxx
	
	"|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fbbfb'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: aCardinalPoint)."
	!

----SNAPSHOT----(8 October 2023 13:22:57) CuisUniversity-5981.image priorSource: 10343134!
!TestXX methodsFor: 'as yet unclassified' stamp: 'ght 10/8/2023 13:25:18'!
test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'll'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #South).
	! !

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'ght 10/8/2023 13:29:48'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 13:35:29' prior: 50656157!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l & [pointingTo = #West])
			ifTrue: [pointingTo := #South] 
			ifFalse: [
				(aCommand = $l )
				ifTrue: [pointingTo := #West]
				ifFalse:[	
					aCommand = $r 
					ifTrue: [pointingTo := #East] 
					ifFalse:[
						aCommand = $b
						ifTrue: 
							[
								pointingTo = #West 
								ifTrue: [currentPoint := currentPoint + (1@0)] 
								ifFalse: [
									pointingTo = #East
									ifTrue: [currentPoint := currentPoint - (1@0)]
									 ifFalse: [currentPoint := currentPoint - (0@1)]
									]
								
							]
						ifFalse:
							[
								pointingTo = #West 
								ifTrue: [currentPoint := currentPoint - (1@0)] 
								ifFalse: [
									pointingTo = #East 
									ifTrue: [currentPoint := currentPoint + (1@0)]
									ifFalse: [currentPoint := currentPoint + (0@1)]
									
									]
								
							]
						] 		
					
				]
		]
	]
	! !

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'ght 10/8/2023 13:35:33'!
ERROR!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 13:37:28' prior: 50656256!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		aCommand = $l 
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				pointingTo := #East
				
				aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [currentPoint := currentPoint - (0@1)]
							
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (-1@0)] 
							ifFalse: [currentPoint := currentPoint + (0@1)]
							
						]
			]
	]
	! !
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 13:35:29' prior: 50656293!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l & [pointingTo = #West])
			ifTrue: [pointingTo := #South] 
			ifFalse: [
				(aCommand = $l )
				ifTrue: [pointingTo := #West]
				ifFalse:[	
					aCommand = $r 
					ifTrue: [pointingTo := #East] 
					ifFalse:[
						aCommand = $b
						ifTrue: 
							[
								pointingTo = #West 
								ifTrue: [currentPoint := currentPoint + (1@0)] 
								ifFalse: [
									pointingTo = #East
									ifTrue: [currentPoint := currentPoint - (1@0)]
									 ifFalse: [currentPoint := currentPoint - (0@1)]
									]
								
							]
						ifFalse:
							[
								pointingTo = #West 
								ifTrue: [currentPoint := currentPoint - (1@0)] 
								ifFalse: [
									pointingTo = #East 
									ifTrue: [currentPoint := currentPoint + (1@0)]
									ifFalse: [currentPoint := currentPoint + (0@1)]
									
									]
								
							]
						] 		
					
				]
		]
	]
	! !

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'ght 10/8/2023 14:15:14'!
ERROR!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 14:17:08' prior: 50656314!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [pointingTo := #East] 
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [currentPoint := currentPoint - (0@1)]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [currentPoint := currentPoint + (0@1)]
									
								]
								
						]
					] 		
					
				
		]
	]
	! !

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 14:17:14'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'ght 10/8/2023 14:17:14'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'ght 10/8/2023 14:17:14'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'ght 10/8/2023 14:17:14'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'ght 10/8/2023 14:17:14'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 14:17:14'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 14:17:14'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'ght 10/8/2023 14:17:15'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'ght 10/8/2023 14:17:15'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'ght 10/8/2023 14:17:15'!
FAILURE!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'ght 10/8/2023 14:17:15'!
FAILURE!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'ght 10/8/2023 14:17:34'!
FAILURE!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 14:17:46'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'ght 10/8/2023 14:17:55'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'ght 10/8/2023 14:17:59'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'ght 10/8/2023 14:18:04'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'ght 10/8/2023 14:18:09'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 14:18:14'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 14:18:20'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'ght 10/8/2023 14:18:24'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'ght 10/8/2023 14:18:29'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 14:18:51'!
PASSED!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 14:20:59' prior: 50656351!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)							
			ifTrue: [pointingTo := #West]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [pointingTo := #East] 
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [currentPoint := currentPoint - (0@1)]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [currentPoint := currentPoint + (0@1)]
									
								]
								
						]
					] 		
					
				
		]
	]
	! !
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 14:29:40' prior: 50656463!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [pointingTo := #West]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [pointingTo := #East] 
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [currentPoint := currentPoint - (0@1)]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [currentPoint := currentPoint + (0@1)]
									
								]
								
						]
					] 		
					
				
		]
	]
	! !

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'ght 10/8/2023 14:29:43'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'ght 10/8/2023 14:29:43'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'ght 10/8/2023 14:29:43'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'ght 10/8/2023 14:29:43'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'ght 10/8/2023 14:29:43'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'ght 10/8/2023 14:29:43'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'ght 10/8/2023 14:29:43'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'ght 10/8/2023 14:29:43'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'ght 10/8/2023 14:29:43'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'ght 10/8/2023 14:29:43'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'ght 10/8/2023 14:29:43'!
PASSED!
!MarsRover methodsFor: 'processing' stamp: 'ght 10/8/2023 14:30:10' prior: 50656493!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [pointingTo := #West]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [pointingTo := #East] 
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [currentPoint := currentPoint - (0@1)]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [currentPoint := currentPoint + (0@1)]
									
								]
								
						]
					] 
		]
	]
	! !

----SNAPSHOT----(8 October 2023 15:27:58) CuisUniversity-5981.image priorSource: 10386681!

----SNAPSHOT----(8 October 2023 15:28:06) CuisUniversity-5981.image priorSource: 10398338!

----STARTUP---- (8 October 2023 16:57:25) as C:\Users\Uriel\Desktop\URI\INGE I\TDD Mars Rover\windows64\CuisUniversity-5981.image!


!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 16:58:59'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 16:59:00'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 16:59:00'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 16:59:00'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 16:59:00'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 16:59:00'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 16:59:00'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 16:59:00'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 16:59:00'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 16:59:00'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 20:21:28'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 20:21:28'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 20:21:28'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 20:21:28'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 20:21:28'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:21:28'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:21:28'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 20:21:28'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 20:21:28'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 20:21:28'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:21:28'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:40:58'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 20:40:58'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 20:40:58'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 20:40:58'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 20:40:58'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:40:58'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:40:58'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 20:40:58'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 20:40:58'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 20:40:58'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:40:58'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 20:42:34'!
test13MarsRoverMovesForwardAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'll'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #South).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 20:43:02'!
test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'll'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #South).
	! !

!methodRemoval: TestXX #test13MarsRoverMovesForwardAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:43:04'!
test13MarsRoverMovesForwardAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'll'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #South).
	!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 20:43:35' prior: 50656741!
test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #South).
	! !

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:43:37'!
FAILURE!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 20:44:56' prior: 50656770!
test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llf'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: #South).
	! !

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:45:01'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 20:47:31' prior: 50656567!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [pointingTo := #West]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [pointingTo := #East] 
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [currentPoint := currentPoint - (0@1)]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
						]
					] 
		]
	]
	! !

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:48:25'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 20:48:40'!
test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llf'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: #South).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 20:48:43' prior: 50656887!
test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llb'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: #South).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 20:48:48' prior: 50656901!
test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llb'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: #South).
	! !

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:48:49'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 20:51:16' prior: 50656807!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [pointingTo := #West]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [pointingTo := #East] 
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [
									pointingTo = #South
									ifTrue: [currentPoint := currentPoint + (0@1)]
									ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
						]
					] 
		]
	]
	! !

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:51:20'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 20:53:10'!
test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #South).
	! !

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 20:54:23'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 20:55:52' prior: 50656933!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [pointingTo := #West]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [
					pointingTo = #East
					ifTrue: [pointingTo := #South]
					ifFalse: [pointingTo := #East] 
				]
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [
									pointingTo = #South
									ifTrue: [currentPoint := currentPoint + (0@1)]
									ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
						]
					] 
		]
	]
	! !

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 20:55:54'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 20:55:54'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 20:55:54'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 20:55:54'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 20:55:54'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:55:54'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:55:54'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 20:55:54'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 20:55:55'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 20:55:55'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:55:55'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:55:55'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 20:55:55'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 20:55:55'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 20:58:52'!
test16MarsRoverPointsToNorthAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #North).
	! !

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:58:54'!
FAILURE!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 20:59:53'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 21:02:38' prior: 50657039!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [pointingTo := #West]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [
					pointingTo = #East
					ifTrue: [pointingTo := #South]
					ifFalse: [
						pointingTo := #West
						ifTrue: [pointingTo := #North]
						ifFalse: [pointingTo := #East] 
					]
				]
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [
									pointingTo = #South
									ifTrue: [currentPoint := currentPoint + (0@1)]
									ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
						]
					] 
		]
	]
	! !

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:02:41'!
ERROR!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 21:02:48' prior: 50657154!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [pointingTo := #West]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [
					pointingTo = #East
					ifTrue: [pointingTo := #South]
					ifFalse: [
						pointingTo = #West
						ifTrue: [pointingTo := #North]
						ifFalse: [pointingTo := #East] 
					]
				]
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [
									pointingTo = #South
									ifTrue: [currentPoint := currentPoint + (0@1)]
									ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
						]
					] 
		]
	]
	! !

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:02:50'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 21:04:13'!
test17MarsRoverPointsToNorthAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rl'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #North).
	! !

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:04:14'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 21:06:07' prior: 50657202!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [
					pointingTo = #East
					ifTrue: [pointingTo := #North]
					ifFalse: [pointingTo := #West]
				]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [
					pointingTo = #East
					ifTrue: [pointingTo := #South]
					ifFalse: [
						pointingTo = #West
						ifTrue: [pointingTo := #North]
						ifFalse: [pointingTo := #East] 
					]
				]
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [
									pointingTo = #South
									ifTrue: [currentPoint := currentPoint + (0@1)]
									ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
						]
					] 
		]
	]
	! !

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:06:09'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 21:09:17'!
test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	! !

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 21:09:21'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 21:10:25' prior: 50657319!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [
					pointingTo = #East
					ifTrue: [pointingTo := #North]
					ifFalse: [pointingTo := #West]
				]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [
					pointingTo = #East
					ifTrue: [pointingTo := #South]
					ifFalse: [
						pointingTo = #West
						ifTrue: [pointingTo := #North]
						ifFalse: [
							pointingTo = #South
							ifTrue: [pointingTo := #West]
							ifFalse: [pointingTo := #East] 
						]
					]
				]
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [
									pointingTo = #South
									ifTrue: [currentPoint := currentPoint + (0@1)]
									ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
						]
					] 
		]
	]
	! !

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 21:10:27'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 21:10:42'!
test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrl'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #East).
	! !

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 21:10:43'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 21:11:32' prior: 50657443!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [
					pointingTo = #East
					ifTrue: [pointingTo := #North]
					ifFalse: [
						pointingTo = #South 
						ifTrue: [pointingTo := #East]
						ifFalse: [pointingTo := #West]
					]
				]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [
					pointingTo = #East
					ifTrue: [pointingTo := #South]
					ifFalse: [
						pointingTo = #West
						ifTrue: [pointingTo := #North]
						ifFalse: [
							pointingTo = #South
							ifTrue: [pointingTo := #West]
							ifFalse: [pointingTo := #East] 
						]
					]
				]
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [
									pointingTo = #South
									ifTrue: [currentPoint := currentPoint + (0@1)]
									ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							]
								
						]
					ifFalse:
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
						]
					] 
		]
	]
	! !

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 21:12:04'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 21:18:30'!
test20MarsRoverStopProcessingAfterWrongCommand
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrlallb'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #East).
	! !

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 21:18:32'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 21:20:00' prior: 50657574!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [
					pointingTo = #East
					ifTrue: [pointingTo := #North]
					ifFalse: [
						pointingTo = #South 
						ifTrue: [pointingTo := #East]
						ifFalse: [pointingTo := #West]
					]
				]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [
					pointingTo = #East
					ifTrue: [pointingTo := #South]
					ifFalse: [
						pointingTo = #West
						ifTrue: [pointingTo := #North]
						ifFalse: [
							pointingTo = #South
							ifTrue: [pointingTo := #West]
							ifFalse: [pointingTo := #East] 
						]
					]
				]
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [
									pointingTo = #South
									ifTrue: [currentPoint := currentPoint + (0@1)]
									ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							]
								
						]
					ifFalse:
						[
							aCommand = $f
							ifTrue: [
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
							]
							ifFalse: [^self].
						]
					] 
		]
	]
	! !

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 21:20:06'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:06:35'!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbblff'.
	
	self assert: (aMarsRover isAt: 4@-1 pointingTo: #North).
	! !

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:06:36'!
FAILURE!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:06:55'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:06:55'!
FAILURE!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:06:55'!
FAILURE!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:06:58'!
PASSED!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 22:09:21' prior: 50657711!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [
					pointingTo = #East
					ifTrue: [pointingTo := #North]
					ifFalse: [
						pointingTo = #South 
						ifTrue: [pointingTo := #West]
						ifFalse: [pointingTo := #East]
					]
				]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [
					pointingTo = #East
					ifTrue: [pointingTo := #South]
					ifFalse: [
						pointingTo = #West
						ifTrue: [pointingTo := #North]
						ifFalse: [
							pointingTo = #South
							ifTrue: [pointingTo := #East]
							ifFalse: [pointingTo := #West] 
						]
					]
				]
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [
									pointingTo = #South
									ifTrue: [currentPoint := currentPoint + (0@1)]
									ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							]
								
						]
					ifFalse:
						[
							aCommand = $f
							ifTrue: [
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
							]
							ifFalse: [^self].
						]
					] 
		]
	]
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:09:52' prior: 50657425!
test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #East).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:09:57' prior: 50657556!
test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrl'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	! !

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:09:58'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 22:11:45' prior: 50657934!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [
					pointingTo = #East
					ifTrue: [pointingTo := #North]
					ifFalse: [
						pointingTo := #West
					]
				]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [
					pointingTo = #East
					ifTrue: [pointingTo := #South]
					ifFalse: [
						pointingTo = #West
						ifTrue: [pointingTo := #North]
						ifFalse: [
							pointingTo = #South
							ifTrue: [pointingTo := #East]
							ifFalse: [pointingTo := #West] 
						]
					]
				]
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [
									pointingTo = #South
									ifTrue: [currentPoint := currentPoint + (0@1)]
									ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							]
								
						]
					ifFalse:
						[
							aCommand = $f
							ifTrue: [
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
							]
							ifFalse: [^self].
						]
					] 
		]
	]
	! !
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/8/2023 22:12:05' prior: 50658021!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: [:aCommand | 
		(aCommand = $l)				
			ifTrue: [
				(pointingTo = #West) 
				ifTrue: [pointingTo := #South]
			        ifFalse: [
					pointingTo = #East
					ifTrue: [pointingTo := #North]
					ifFalse: [
						pointingTo := #West
					]
				]
			]
			ifFalse:[	
				aCommand = $r 
				ifTrue: [
					pointingTo = #East
					ifTrue: [pointingTo := #South]
					ifFalse: [
						pointingTo = #West
						ifTrue: [pointingTo := #North]
						ifFalse: [
							pointingTo := #East
						]
					]
				]
				ifFalse:[
					aCommand = $b
					ifTrue: 
						[
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint + (1@0)] 
							ifFalse: [
								pointingTo = #East
								ifTrue: [currentPoint := currentPoint - (1@0)]
								 ifFalse: [
									pointingTo = #South
									ifTrue: [currentPoint := currentPoint + (0@1)]
									ifFalse: [currentPoint := currentPoint - (0@1)]
								]
							]
								
						]
					ifFalse:
						[
							aCommand = $f
							ifTrue: [
							pointingTo = #West 
							ifTrue: [currentPoint := currentPoint - (1@0)] 
							ifFalse: [
								pointingTo = #East 
								ifTrue: [currentPoint := currentPoint + (1@0)]
								ifFalse: [
									pointingTo = #South
									ifTrue:[currentPoint := currentPoint - (0@1)]
									ifFalse:[currentPoint := currentPoint + (0@1)]
								]
							]
							]
							ifFalse: [^self].
						]
					] 
		]
	]
	! !

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:12:14'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:12:14'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:12:14'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:12:14'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:12:14'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:12:14'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:12:14'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:12:14'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:12:15'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:12:15'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:12:15'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:12:15'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:12:15'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:12:15'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:12:15'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:12:15'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:12:15'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:12:15'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:12:15'!
FAILURE!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:12:15'!
FAILURE!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:12:31' prior: 50657694!
test20MarsRoverStopProcessingAfterWrongCommand
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrlallb'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	! !

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:12:32'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:12:32'!
FAILURE!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:12:32'!
FAILURE!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:13:09' prior: 50657836!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #North).
	! !

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:13:10'!
FAILURE!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:13:14'!
FAILURE!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:13:19' prior: 50658287!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #South).
	! !

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:13:20'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:13:20'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:13:20'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:13:20'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:13:20'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:13:21'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:13:31' prior: 50658306!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrfff'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: #South).
	! !

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:13:32'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:13:40' prior: 50658392!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrfffl'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: #West).
	! !

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:13:41'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:13:50' prior: 50658479!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbb'.
	
	self assert: (aMarsRover isAt: 4@-3 pointingTo: #West).
	! !

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:13:51'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:14:01' prior: 50658566!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbbl'.
	
	self assert: (aMarsRover isAt: 4@-3 pointingTo: #North).
	! !

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:14:02'!
FAILURE!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:18:30' prior: 50658653!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbbr'.
	
	self assert: (aMarsRover isAt: 4@-3 pointingTo: #North).
	! !

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:18:30'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:18:30'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:18:30'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:18:30'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:18:30'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:18:31'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:18:40' prior: 50658669!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbbrff'.
	
	self assert: (aMarsRover isAt: 4@-1 pointingTo: #North).
	! !

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:18:41'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:18:44'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:18:44'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:18:44'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:18:44'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:18:45'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:18:50' prior: 50658756!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbbrffaaa'.
	
	self assert: (aMarsRover isAt: 4@-1 pointingTo: #North).
	! !

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:18:51'!
PASSED!
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:18:56' prior: 50658916!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbbrffa'.
	
	self assert: (aMarsRover isAt: 4@-1 pointingTo: #North).
	! !
!TestXX methodsFor: 'as yet unclassified' stamp: 'UNS 10/8/2023 22:18:59' prior: 50659003!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := #North.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbbrffabb'.
	
	self assert: (aMarsRover isAt: 4@-1 pointingTo: #North).
	! !

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:19:02'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:39:28'!
PASSED!

!testRun: #TestXX #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/8/2023 22:39:28'!
PASSED!

!testRun: #TestXX #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/8/2023 22:39:28'!
PASSED!

!testRun: #TestXX #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/8/2023 22:39:28'!
PASSED!

!testRun: #TestXX #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/8/2023 22:39:28'!
PASSED!

!testRun: #TestXX #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:39:28'!
PASSED!

!testRun: #TestXX #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:39:28'!
PASSED!

!testRun: #TestXX #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

!testRun: #TestXX #test21MarsRoverGeneralizationTest stamp: 'UNS 10/8/2023 22:39:29'!
PASSED!

Object subclass: #MarsRoverCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #MarsRoverCommand category: 'Ejercicio 5 - Mars Rover' stamp: 'UNS 10/8/2023 23:04:28'!
Object subclass: #MarsRoverCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

MarsRoverCommand subclass: #MoveForwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #MoveForwardCommand category: 'Ejercicio 5 - Mars Rover' stamp: 'UNS 10/8/2023 23:05:11'!
MarsRoverCommand subclass: #MoveForwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

MarsRoverCommand subclass: #MoveBackwardsCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #MoveBackwardsCommand category: 'Ejercicio 5 - Mars Rover' stamp: 'UNS 10/8/2023 23:05:20'!
MarsRoverCommand subclass: #MoveBackwardsCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

MarsRoverCommand subclass: #Rotate90DegreesLeftCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #Rotate90DegreesLeftCommand category: 'Ejercicio 5 - Mars Rover' stamp: 'UNS 10/8/2023 23:05:49'!
MarsRoverCommand subclass: #Rotate90DegreesLeftCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

MarsRoverCommand subclass: #Rotate90DegreesRightCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #Rotate90DegreesRightCommand category: 'Ejercicio 5 - Mars Rover' stamp: 'UNS 10/8/2023 23:06:00'!
MarsRoverCommand subclass: #Rotate90DegreesRightCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:12:26'!
processCommand: aCommand.
	
	! !
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:16:06' prior: 50659244!
processCommand: aCharCommand.
	
	(MarsRoverCommand aCommandFor: aCharCommand) ! !
!MarsRoverCommand class methodsFor: 'nil' stamp: 'UNS 10/9/2023 00:19:07'!
aCommandFor: aCharCommand

	^((self subclasses detect: [:aMarsRoverCommandClass | aMarsRoverCommandClass canHandle: aCharCommand ]) new)! !
!MarsRoverCommand class methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:19:37'!
canHandle

	self subclassResponsibility ! !
!MoveBackwardsCommand class methodsFor: 'nil' stamp: 'UNS 10/9/2023 00:20:30'!
canHandle: aCharCommand

	^aCharCommand  = $b! !
!MoveForwardCommand class methodsFor: 'nil' stamp: 'UNS 10/9/2023 00:20:56'!
canHandle: aCharCommand

	^aCharCommand = $f! !
!Rotate90DegreesLeftCommand class methodsFor: 'nil' stamp: 'UNS 10/9/2023 00:21:12'!
canHandle: aCharCommand

	^aCharCommand = $l! !
!Rotate90DegreesRightCommand class methodsFor: 'nil' stamp: 'UNS 10/9/2023 00:21:23'!
canHandle: aCharCommand

	^aCharCommand = $r! !

!classRenamed: #TestXX as: #MarsRoverTest stamp: 'UNS 10/9/2023 00:21:47'!
Smalltalk renameClassNamed: #TestXX as: #MarsRoverTest!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:24:31' prior: 50659248!
processCommand: aCharCommand.
	
	(MarsRoverCommand aCommandFor: aCharCommand) 
		processCommandPointingTo: pointingTo! !
!MarsRoverCommand methodsFor: 'nil' stamp: 'UNS 10/9/2023 00:25:06'!
processCommandPointingTo: aCardinalPoint

	self subclassResponsibility! !
!MoveBackwardsCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:25:38' overrides: 50659294!
processCommandPointingTo: aCardinalPoint

	! !
!MoveForwardCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:26:11' overrides: 50659294!
processCommandPointingTo: aCardinalPoint

	! !
!Rotate90DegreesLeftCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:26:15' overrides: 50659294!
processCommandPointingTo: aCardinalPoint

	! !
!Rotate90DegreesRightCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:26:19' overrides: 50659294!
processCommandPointingTo: aCardinalPoint

	! !
!MoveBackwardsCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:28:31' prior: 50659300 overrides: 50659294!
processCommandPointingTo: aCardinalPoint

	aCardinalPoint moveBackwards! !
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:29:14' prior: 50659288!
processCommand: aCharCommand.
	
	(MarsRoverCommand aCommandFor: aCharCommand) 
		processCommandPointingTo: pointingTo for: self! !
!MoveBackwardsCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:31:01'!
processCommandPointingTo: aCardinalPoint for: aMarsRover

	aCardinalPoint moveBackwards! !

!methodRemoval: MoveBackwardsCommand #processCommandPointingTo: stamp: 'UNS 10/9/2023 00:31:04'!
processCommandPointingTo: aCardinalPoint

	aCardinalPoint moveBackwards!
!MoveForwardCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:31:11'!
processCommandPointingTo: aCardinalPoint for: aMarsRover
! !

!methodRemoval: MoveForwardCommand #processCommandPointingTo: stamp: 'UNS 10/9/2023 00:31:12'!
processCommandPointingTo: aCardinalPoint

	!
!Rotate90DegreesLeftCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:31:18'!
processCommandPointingTo: aCardinalPoint for: aMarsRover
! !

!methodRemoval: Rotate90DegreesLeftCommand #processCommandPointingTo: stamp: 'UNS 10/9/2023 00:31:19'!
processCommandPointingTo: aCardinalPoint

	!
!Rotate90DegreesRightCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:31:23'!
processCommandPointingTo: aCardinalPoint for: aMarsRover
! !

!methodRemoval: Rotate90DegreesRightCommand #processCommandPointingTo: stamp: 'UNS 10/9/2023 00:31:25'!
processCommandPointingTo: aCardinalPoint

	!
!Rotate90DegreesRightCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:32:30' prior: 50659363!
processCommandPointingTo: aCardinalPoint for: aMarsRover

	aCardinalPoint moveBackwards: aMarsRover! !
!Rotate90DegreesRightCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:32:47' prior: 50659373!
processCommandPointingTo: aCardinalPoint for: aMarsRover

	aCardinalPoint rotate90DegreesRight: aMarsRover! !
!Rotate90DegreesLeftCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:33:03' prior: 50659353!
processCommandPointingTo: aCardinalPoint for: aMarsRover
	
	aCardinalPoint rotate90DegreesLeft: aMarsRover! !
!MoveForwardCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:33:26' prior: 50659344!
processCommandPointingTo: aCardinalPoint for: aMarsRover
	
	aCardinalPoint moveForward: aMarsRover! !
!MoveBackwardsCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 00:33:32' prior: 50659333!
processCommandPointingTo: aCardinalPoint for: aMarsRover

	aCardinalPoint moveBackwards: aMarsRover! !

Object subclass: #CardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #CardinalPoint category: 'Ejercicio 5 - Mars Rover' stamp: 'UNS 10/9/2023 00:34:31'!
Object subclass: #CardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

CardinalPoint subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #North category: 'Ejercicio 5 - Mars Rover' stamp: 'UNS 10/9/2023 00:34:43'!
CardinalPoint subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

CardinalPoint subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #East category: 'Ejercicio 5 - Mars Rover' stamp: 'UNS 10/9/2023 00:34:46'!
CardinalPoint subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

CardinalPoint subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #West category: 'Ejercicio 5 - Mars Rover' stamp: 'UNS 10/9/2023 00:34:48'!
CardinalPoint subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

CardinalPoint subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #South category: 'Ejercicio 5 - Mars Rover' stamp: 'UNS 10/9/2023 00:34:51'!
CardinalPoint subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:36:23' prior: 50651141!
test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
	
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: ''.
	
	self assert: (aMarsRover isAt: anInitialPoint pointingTo: aCardinalPoint).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:36:33' prior: 50655633!
test03MarsRoverMovesForwardWhenProcessingCommandListWithFs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@3 pointingTo: aCardinalPoint).
	! !

#North!

#North!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:36:54' prior: 50655588!
test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: aCardinalPoint).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:36:57' prior: 50655866!
test06MarsRoverPointsToWestWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:36:59' prior: 50655557!
test07MarsRoverMovesForwardToWestAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #West).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:06' prior: 50655529!
test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lb'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: #West).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:09' prior: 50655893!
test09MarsRoverPointsToEastWhenProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'r'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #East).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:12' prior: 50655920!
test10MarsRoverMovesForwardToEastAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rf'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: #East).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:16' prior: 50656040!
test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rb'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: #East).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:20' prior: 50656238!
test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'll'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #South).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:24' prior: 50656789!
test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llf'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: #South).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:28' prior: 50656915!
test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llb'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: #South).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:32' prior: 50657021!
test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #South).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:35' prior: 50657133!
test16MarsRoverPointsToNorthAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #North).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:40' prior: 50657302!
test17MarsRoverPointsToNorthAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rl'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #North).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:44' prior: 50657989!
test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #East).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:47' prior: 50658003!
test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrl'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:50' prior: 50658197!
test20MarsRoverStopProcessingAfterWrongCommand
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrlallb'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: #West).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:37:54' prior: 50659017!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbbrffabb'.
	
	self assert: (aMarsRover isAt: 4@-1 pointingTo: #North).
	! !

North new!
!MarsRover methodsFor: 'assertions' stamp: 'UNS 10/9/2023 00:39:18' prior: 50651074!
isAt: aPosition pointingTo: aCardinalPoint
	
	^currentPoint = aPosition  and: [pointingTo = aCardinalPoint.]! !

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 00:39:28'!
PASSED!
!CardinalPoint methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:42:44'!
moveBackwards: aMarsRover

	self subclassResponsibility! !
!CardinalPoint methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:42:54'!
moveForward: aMarsRover

	self subclassResponsibility! !
!CardinalPoint methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:43:21'!
rotate90DegreesLeft: aMarsRover

	self subclassResponsibility! !
!CardinalPoint methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:43:36'!
rotate90DegreesRight: aMarsRover

	self subclassResponsibility! !
!North methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:44:31' overrides: 50659824!
moveBackwards: aMarsRover

	self subclassResponsibility! !
!East methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:44:31' overrides: 50659824!
moveBackwards: aMarsRover

	self subclassResponsibility! !
!West methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:44:32' overrides: 50659824!
moveBackwards: aMarsRover

	self subclassResponsibility! !
!South methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:44:32' overrides: 50659824!
moveBackwards: aMarsRover

	self subclassResponsibility! !
!CardinalPoint methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:44:32' prior: 50659824!
moveBackwards: aMarsRover

	self subclassResponsibility! !
!North methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:45:11' overrides: 50659829!
moveForward: aMarsRover

	self subclassResponsibility! !
!East methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:45:11' overrides: 50659829!
moveForward: aMarsRover

	self subclassResponsibility! !
!West methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:45:11' overrides: 50659829!
moveForward: aMarsRover

	self subclassResponsibility! !
!South methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:45:12' overrides: 50659829!
moveForward: aMarsRover

	self subclassResponsibility! !
!CardinalPoint methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:45:12' prior: 50659829!
moveForward: aMarsRover

	self subclassResponsibility! !
!North methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:45:25' overrides: 50659833!
rotate90DegreesLeft: aMarsRover

	self subclassResponsibility! !
!East methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:45:25' overrides: 50659833!
rotate90DegreesLeft: aMarsRover

	self subclassResponsibility! !
!West methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:45:26' overrides: 50659833!
rotate90DegreesLeft: aMarsRover

	self subclassResponsibility! !
!South methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:45:26' overrides: 50659833!
rotate90DegreesLeft: aMarsRover

	self subclassResponsibility! !
!CardinalPoint methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:45:26' prior: 50659833!
rotate90DegreesLeft: aMarsRover

	self subclassResponsibility! !
!North methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:45:29' overrides: 50659838!
rotate90DegreesRight: aMarsRover

	self subclassResponsibility! !
!East methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:45:29' overrides: 50659838!
rotate90DegreesRight: aMarsRover

	self subclassResponsibility! !
!West methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:45:29' overrides: 50659838!
rotate90DegreesRight: aMarsRover

	self subclassResponsibility! !
!South methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:45:30' overrides: 50659838!
rotate90DegreesRight: aMarsRover

	self subclassResponsibility! !
!CardinalPoint methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:45:30' prior: 50659838!
rotate90DegreesRight: aMarsRover

	self subclassResponsibility! !
!East methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:46:30' prior: 50659848 overrides: 50659863!
moveBackwards: aMarsRover

	aMarsRover moveBackwardsPointingToEast! !
!East methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:46:46' prior: 50659873 overrides: 50659888!
moveForward: aMarsRover

	aMarsRover moveForwardPointingToEast! !
!East methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:47:06' prior: 50659898 overrides: 50659913!
rotate90DegreesLeft: aMarsRover

	aMarsRover rotate90DegreesLeftPointingToEast! !
!East methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:47:19' prior: 50659923 overrides: 50659938!
rotate90DegreesRight: aMarsRover

	aMarsRover rotate90DegreesRightPointingToEast! !
!North methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:47:44' prior: 50659843 overrides: 50659863!
moveBackwards: aMarsRover

	aMarsRover moveBackwardsPointingToNorth! !
!North methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:47:53' prior: 50659868 overrides: 50659888!
moveForward: aMarsRover

	aMarsRover moveForwardPointingToNorth! !
!North methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:48:01' prior: 50659893 overrides: 50659913!
rotate90DegreesLeft: aMarsRover

	aMarsRover rotate90DegreesLeftPointingToNorth! !
!North methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:48:14' prior: 50659918 overrides: 50659938!
rotate90DegreesRight: aMarsRover

	aMarsRover rotate90DegreesRightPointingToNorth
	! !
!South methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:48:32' prior: 50659858 overrides: 50659863!
moveBackwards: aMarsRover

	aMarsRover moveBackwardsPointingToSouth! !
!South methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:48:48' prior: 50659883 overrides: 50659888!
moveForward: aMarsRover

	aMarsRover moveForwardPointingToSouth! !
!South methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:48:57' prior: 50659908 overrides: 50659913!
rotate90DegreesLeft: aMarsRover

	aMarsRover rotate90DegreesLeftPointingToSouth! !
!South methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:49:08' prior: 50659933 overrides: 50659938!
rotate90DegreesRight: aMarsRover

	aMarsRover rotate90DegreesRightPointingToSouth! !
!West methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:49:20' prior: 50659853 overrides: 50659863!
moveBackwards: aMarsRover

	aMarsRover moveBackwardsPointingToWest! !
!West methodsFor: 'movement' stamp: 'UNS 10/9/2023 00:49:28' prior: 50659878 overrides: 50659888!
moveForward: aMarsRover

	aMarsRover moveForwardPointingToWest! !
!West methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:49:35' prior: 50659903 overrides: 50659913!
rotate90DegreesLeft: aMarsRover

	aMarsRover rotate90DegreesLeftPointingToWest! !
!West methodsFor: 'rotation' stamp: 'UNS 10/9/2023 00:49:42' prior: 50659928 overrides: 50659938!
rotate90DegreesRight: aMarsRover

	aMarsRover rotate90DegreesRightPointingToWest! !
!MarsRover methodsFor: 'processing-east' stamp: 'UNS 10/9/2023 00:52:41'!
moveBackwardsPointingToEast! !
!MarsRover methodsFor: 'processing-east' stamp: 'UNS 10/9/2023 00:52:46'!
moveForwardPointingToEast! !
!MarsRover methodsFor: 'processing-east' stamp: 'UNS 10/9/2023 00:52:49'!
rotate90DegreesLeftPointingToEast! !
!MarsRover methodsFor: 'processing-east' stamp: 'UNS 10/9/2023 00:52:53'!
rotate90DegreesRightPointingToEast! !
!MarsRover methodsFor: 'processing-north' stamp: 'UNS 10/9/2023 00:52:58'!
moveBackwardsPointingToNorth! !
!MarsRover methodsFor: 'processing-north' stamp: 'UNS 10/9/2023 00:53:02'!
moveForwardPointingToNorth! !
!MarsRover methodsFor: 'processing-north' stamp: 'UNS 10/9/2023 00:53:04'!
rotate90DegreesLeftPointingToNorth! !
!MarsRover methodsFor: 'processing-north' stamp: 'UNS 10/9/2023 00:53:07'!
rotate90DegreesRightPointingToNorth! !
!MarsRover methodsFor: 'processing-south' stamp: 'UNS 10/9/2023 00:53:13'!
moveBackwardsPointingToSouth! !
!MarsRover methodsFor: 'processing-south' stamp: 'UNS 10/9/2023 00:53:31'!
moveForwardPointingToSouth! !
!MarsRover methodsFor: 'processing-south' stamp: 'UNS 10/9/2023 00:53:34'!
rotate90DegreesLeftPointingToSouth! !
!MarsRover methodsFor: 'processing-south' stamp: 'UNS 10/9/2023 00:53:37'!
rotate90DegreesRightPointingToSouth! !
!MarsRover methodsFor: 'processing-west' stamp: 'UNS 10/9/2023 00:53:42'!
moveBackwardsPointingToWest! !
!MarsRover methodsFor: 'processing-west' stamp: 'UNS 10/9/2023 00:53:47'!
moveForwardPointingToWest! !
!MarsRover methodsFor: 'processing-west' stamp: 'UNS 10/9/2023 00:53:50'!
rotate90DegreesLeftPointingToWest! !
!MarsRover methodsFor: 'processing-west' stamp: 'UNS 10/9/2023 00:53:53'!
rotate90DegreesRightPointingToWest! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:55:27' prior: 50659513!
test06MarsRoverPointsToWestWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: West new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:55:31' prior: 50659527!
test07MarsRoverMovesForwardToWestAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: West new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:55:44' prior: 50659541!
test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lb'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: West new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:55:48' prior: 50659555!
test09MarsRoverPointsToEastWhenProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'r'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: East new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:55:52' prior: 50659569!
test10MarsRoverMovesForwardToEastAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rf'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: East new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:55:57' prior: 50659583!
test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rb'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: East new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:56:04' prior: 50659597!
test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'll'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: South new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:56:10' prior: 50659611!
test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llf'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: South new).
	! !

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/9/2023 00:56:18'!
FAILURE!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 00:56:18'!
FAILURE!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/9/2023 00:56:18'!
FAILURE!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/9/2023 00:56:18'!
FAILURE!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 00:56:18'!
FAILURE!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 00:56:18'!
FAILURE!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 00:56:18'!
FAILURE!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 00:56:18'!
FAILURE!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 00:56:18'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:56:26' prior: 50659626!
test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llb'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: South new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:56:37' prior: 50659641!
test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: South new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:56:42' prior: 50659655!
test16MarsRoverPointsToNorthAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: North new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:56:48' prior: 50659669!
test17MarsRoverPointsToNorthAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rl'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: North new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:56:54' prior: 50659683!
test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: East new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:56:57' prior: 50659697!
test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrl'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: West new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:57:02' prior: 50659711!
test20MarsRoverStopProcessingAfterWrongCommand
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrlallb'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: West new).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:57:07' prior: 50659725!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbbrffabb'.
	
	self assert: (aMarsRover isAt: 4@-1 pointingTo: aCardinalPoint).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:57:27' prior: 50660326!
test16MarsRoverPointsToNorthAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: aCardinalPoint ).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:57:28' prior: 50660410!
test16MarsRoverPointsToNorthAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: aCardinalPoint).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 00:57:33' prior: 50660340!
test17MarsRoverPointsToNorthAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rl'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: aCardinalPoint).
	! !
!MarsRover methodsFor: 'processing-east' stamp: 'UNS 10/9/2023 00:59:14' prior: 50660039!
moveBackwardsPointingToEast

	currentPoint := currentPoint - (1@0)! !
!MarsRover methodsFor: 'processing-east' stamp: 'UNS 10/9/2023 00:59:35' prior: 50660043!
moveForwardPointingToEast

	currentPoint := currentPoint + (1@0)! !
!MarsRover methodsFor: 'processing-east' stamp: 'UNS 10/9/2023 01:00:04' prior: 50660047!
rotate90DegreesLeftPointingToEast

	pointingTo := #North! !
!MarsRover methodsFor: 'processing-east' stamp: 'UNS 10/9/2023 01:00:11' prior: 50660462!
rotate90DegreesLeftPointingToEast

	pointingTo := North new! !
!MarsRover methodsFor: 'processing-east' stamp: 'UNS 10/9/2023 01:00:40' prior: 50660051!
rotate90DegreesRightPointingToEast

	pointingTo := South new! !
!MarsRover methodsFor: 'processing-north' stamp: 'UNS 10/9/2023 01:01:23' prior: 50660055!
moveBackwardsPointingToNorth

	currentPoint := currentPoint - (0@1)! !
!MarsRover methodsFor: 'processing-north' stamp: 'UNS 10/9/2023 01:01:37' prior: 50660059!
moveForwardPointingToNorth

	currentPoint := currentPoint + (0@1)! !
!MarsRover methodsFor: 'processing-north' stamp: 'UNS 10/9/2023 01:01:56' prior: 50660063!
rotate90DegreesLeftPointingToNorth

	pointingTo := #West! !
!MarsRover methodsFor: 'processing-north' stamp: 'UNS 10/9/2023 01:01:58' prior: 50660488!
rotate90DegreesLeftPointingToNorth

	pointingTo := West new.! !
!MarsRover methodsFor: 'processing-north' stamp: 'UNS 10/9/2023 01:02:12' prior: 50660067!
rotate90DegreesRightPointingToNorth

	pointingTo := East new.! !
!MarsRover methodsFor: 'processing-south' stamp: 'UNS 10/9/2023 01:03:22' prior: 50660071!
moveBackwardsPointingToSouth
	
	currentPoint := currentPoint + (0@1)! !
!MarsRover methodsFor: 'processing-south' stamp: 'UNS 10/9/2023 01:03:33' prior: 50660075!
moveForwardPointingToSouth

	currentPoint := currentPoint - (0@1)! !
!MarsRover methodsFor: 'processing-south' stamp: 'UNS 10/9/2023 01:03:52' prior: 50660079!
rotate90DegreesLeftPointingToSouth

	pointingTo := West new.! !
!MarsRover methodsFor: 'processing-south' stamp: 'UNS 10/9/2023 01:04:05' prior: 50660083!
rotate90DegreesRightPointingToSouth

	pointingTo := East new.! !
!MarsRover methodsFor: 'processing-west' stamp: 'UNS 10/9/2023 01:05:49' prior: 50660087!
moveBackwardsPointingToWest

	currentPoint := currentPoint + (1@0)! !
!MarsRover methodsFor: 'processing-west' stamp: 'UNS 10/9/2023 01:05:59' prior: 50660091!
moveForwardPointingToWest

	currentPoint := currentPoint - (1@0)! !
!MarsRover methodsFor: 'processing-west' stamp: 'UNS 10/9/2023 01:06:36' prior: 50660095!
rotate90DegreesLeftPointingToWest

	pointingTo := South new.! !
!MarsRover methodsFor: 'processing-west' stamp: 'UNS 10/9/2023 01:07:04' prior: 50660099!
rotate90DegreesRightPointingToWest

	pointingTo := North new.! !
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/9/2023 01:08:07' prior: 50659326!
processCommand: aCharCommand
	
	(MarsRoverCommand aCommandFor: aCharCommand) 
		processCommandPointingTo: pointingTo for: self! !
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/9/2023 01:09:37' prior: 50658073!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: 
		[:aCommand |  self processCommand: aCommand]
	! !

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 01:11:39'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 01:15:23'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 01:15:27'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/9/2023 01:15:31'!
FAILURE!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/9/2023 01:15:31'!
FAILURE!
!MarsRover methodsFor: 'assertions' stamp: 'UNS 10/9/2023 01:19:35' prior: 50659739!
isAt: aPosition pointingTo: aCardinalPoint
	
	^currentPoint = aPosition  and: [pointingTo = aCardinalPoint class.]! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:19:48' prior: 50660104!
test06MarsRoverPointsToWestWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: West).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:19:57' prior: 50659468!
test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
	
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: ''.
	
	self assert: (aMarsRover isAt: anInitialPoint pointingTo: North).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:01' prior: 50659483!
test03MarsRoverMovesForwardWhenProcessingCommandListWithFs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'fff'.
	
	self assert: (aMarsRover isAt: 0@3 pointingTo: North).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:08' prior: 50659498!
test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'bbb'.
	
	self assert: (aMarsRover isAt: 0@-3 pointingTo: North).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:12' prior: 50660118!
test07MarsRoverMovesForwardToWestAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: West).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:15' prior: 50660132!
test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lb'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: West).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:24' prior: 50660146!
test09MarsRoverPointsToEastWhenProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'r'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: East).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:27' prior: 50660160!
test10MarsRoverMovesForwardToEastAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rf'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: East).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:30' prior: 50660174!
test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rb'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: East).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:33' prior: 50660188!
test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'll'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: South).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:36' prior: 50660203!
test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llf'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: South).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:38' prior: 50660297!
test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llb'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: South).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:41' prior: 50660312!
test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: South).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:44' prior: 50660424!
test16MarsRoverPointsToNorthAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: North).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:55' prior: 50660438!
test17MarsRoverPointsToNorthAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rl'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: North).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:20:58' prior: 50660354!
test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: East).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:21:01' prior: 50660368!
test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrl'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: West).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:21:04' prior: 50660382!
test20MarsRoverStopProcessingAfterWrongCommand
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrlallb'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: West).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:21:11' prior: 50660396!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbbrffabb'.
	
	self assert: (aMarsRover isAt: 4@-1 pointingTo: North).
	! !

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 01:21:15'!
FAILURE!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 01:21:15'!
FAILURE!

norte := North new!

norte class!
!MarsRover methodsFor: 'assertions' stamp: 'UNS 10/9/2023 01:22:43' prior: 50660577!
isAt: aPosition pointingTo: aCardinalPoint
	
	^currentPoint = aPosition  and: [pointingTo class = aCardinalPoint.]! !

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 01:22:46'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 01:22:46'!
ERROR!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 01:22:46'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 01:23:24'!
PASSED!
!MarsRover methodsFor: 'processing-south' stamp: 'UNS 10/9/2023 01:28:41' prior: 50660519!
rotate90DegreesRightPointingToSouth

	pointingTo := West new.! !
!MarsRover methodsFor: 'processing-south' stamp: 'UNS 10/9/2023 01:28:57' prior: 50660514!
rotate90DegreesLeftPointingToSouth

	pointingTo := East new.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:29:01' prior: 50660796!
test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llr'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: West).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:29:12' prior: 50660810!
test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrl'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: East).
	! !

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 01:29:20'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:29:45' prior: 50660824!
test20MarsRoverStopProcessingAfterWrongCommand
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrlallb'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: East).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:32:05' prior: 50660838!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbblffabb'.
	
	self assert: (aMarsRover isAt: 4@-1 pointingTo: North).
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'UNS 10/9/2023 01:32:25' prior: 50661006!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbblffabb'.
	
	self assert: (aMarsRover isAt: -4@-1 pointingTo: North).
	! !

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 01:32:39'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 01:33:08'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 01:33:20'!
ERROR!

MarsRover!

self!

MarsRover!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 01:37:10'!
ERROR!

MarsRoverCommand subclass: #WrongCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!

!classDefinition: #WrongCommand category: 'Ejercicio 5 - Mars Rover' stamp: 'UNS 10/9/2023 01:39:10'!
MarsRoverCommand subclass: #WrongCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio 5 - Mars Rover'!
!WrongCommand class methodsFor: 'nil' stamp: 'UNS 10/9/2023 01:41:40'!
canHandle: aCharCommand

	^(aCharCommand ~= $f) and: (aCharCommand ~= $b) 
	   and: (aCharCommand ~= $l) and: (aCharCommand ~= $r)! !
!WrongCommand methodsFor: 'processing' stamp: 'UNS 10/9/2023 01:42:45'!
processCommandPointingTo: aCardinalPoint for: aMarsRover

	^aMarsRover! !

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 01:44:18'!
FAILURE!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 01:44:18'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/9/2023 01:52:29' prior: 50660544!
processCommand: aCharCommand
	
	^(MarsRoverCommand aCommandFor: aCharCommand) 
		processCommandPointingTo: pointingTo for: self! !
!Behavior method!
rotate90DegreesLeftPointingToEast
	#_coverageTracker32251775_ markAsExecuted.
	#_coverageTracker32251775_
		cover: (37 to: 46)
		declaredAt: (37 to: 46)
		by:
			(pointingTo _ [ | receiver1 |
			receiver1 _ #_coverageTracker32251775_
				coverAll:
					{51 to: 55}
				by: North.
			#_coverageTracker32251775_
				coverAll:
					{57 to: 59}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).! !
!Behavior method!
processCommandPointingTo: aCardinalPoint for: aMarsRover
	#_coverageTracker32251796_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32251796_
		cover: (61 to: 74)
		declaredAt: (27 to: 40)
		by: aCardinalPoint.
	#_coverageTracker32251796_
		coverAll:
			{76 to: 87}
		evaluating: [
			receiver1 moveForward:
				(#_coverageTracker32251796_
					cover: (89 to: 98)
					declaredAt: (47 to: 56)
					by: aMarsRover) ]
		thatSends: #moveForward:
		to: receiver1 ] value.! !
!Behavior method!
isAt: aPosition pointingTo: aCardinalPoint
	#_coverageTracker32251874_ markAsExecuted.
	^ [ | receiver4 |
	receiver4 _ [ | receiver1 |
	receiver1 _ #_coverageTracker32251874_
		cover: (48 to: 59)
		declaredAt: (48 to: 59)
		by: currentPoint.
	#_coverageTracker32251874_
		coverAll:
			{61 to: 61}
		evaluating: [
			receiver1 =
				(#_coverageTracker32251874_
					cover: (63 to: 71)
					declaredAt: (7 to: 15)
					by: aPosition) ]
		thatSends: #=
		to: receiver1 ] value.
	#_coverageTracker32251874_
		coverAll:
			{74 to: 77}
		evaluating: [
			receiver4 and: [
				[ | receiver3 |
				receiver3 _ [ | receiver2 |
				receiver2 _ #_coverageTracker32251874_
					cover: (80 to: 89)
					declaredAt: (80 to: 89)
					by: pointingTo.
				#_coverageTracker32251874_
					coverAll:
						{91 to: 95}
					evaluating: [ receiver2 class ]
					thatSends: #class
					to: receiver2 ] value.
				#_coverageTracker32251874_
					coverAll:
						{97 to: 97}
					evaluating: [
						receiver3 =
							(#_coverageTracker32251874_
								cover: (99 to: 112)
								declaredAt: (29 to: 42)
								by: aCardinalPoint) ]
					thatSends: #=
					to: receiver3 ] value ]]
		thatSends: #and:
		to: receiver4 ] value.! !
!Behavior method!
at: anInitialPoint pointingTo: aCardinalPoint
	#_coverageTracker32251883_ markAsExecuted.
	#_coverageTracker32251883_
		cover: (51 to: 62)
		declaredAt: (51 to: 62)
		by:
			(currentPoint _ #_coverageTracker32251883_
				cover: (67 to: 80)
				declaredAt: (5 to: 18)
				by: anInitialPoint).
	#_coverageTracker32251883_
		cover: (84 to: 93)
		declaredAt: (84 to: 93)
		by:
			(pointingTo _ #_coverageTracker32251883_
				cover: (98 to: 111)
				declaredAt: (32 to: 45)
				by: aCardinalPoint).! !
!Behavior method!
moveBackwardsPointingToSouth
	#_coverageTracker32251901_ markAsExecuted.
	#_coverageTracker32251901_
		cover: (49 to: 60)
		declaredAt: (33 to: 44)
		by:
			(currentPoint _ [ | receiver2 |
			receiver2 _ #_coverageTracker32251901_
				cover: (33 to: 44)
				declaredAt: (33 to: 44)
				by: currentPoint.
			#_coverageTracker32251901_
				coverAll:
					{62 to: 62}
				evaluating: [
					receiver2 +
						[ | receiver1 |
						receiver1 _ #_coverageTracker32251901_
							coverAll:
								{65 to: 65}
							byLiteralOrPseudoVariable: 0.
						#_coverageTracker32251901_
							coverAll:
								{66 to: 66}
							evaluating: [
								receiver1 @
									(#_coverageTracker32251901_
										coverAll:
											{67 to: 67}
										byLiteralOrPseudoVariable: 1) ]
							thatSends: #@
							to: receiver1 ] value ]
				thatSends: #+
				to: receiver2 ] value).! !
!Behavior method!
canHandle: aCharCommand
	#_coverageTracker32251911_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker32251911_
		cover: (28 to: 39)
		declaredAt: (12 to: 23)
		by: aCharCommand.
	#_coverageTracker32251911_
		coverAll:
			{42 to: 42}
		evaluating: [
			receiver1 =
				(#_coverageTracker32251911_
					coverAll:
						{44 to: 45}
					byLiteralOrPseudoVariable: $b) ]
		thatSends: #=
		to: receiver1 ] value.! !
!Behavior method!
rotate90DegreesLeftPointingToWest
	#_coverageTracker32251920_ markAsExecuted.
	#_coverageTracker32251920_
		cover: (37 to: 46)
		declaredAt: (37 to: 46)
		by:
			(pointingTo _ [ | receiver1 |
			receiver1 _ #_coverageTracker32251920_
				coverAll:
					{51 to: 55}
				by: South.
			#_coverageTracker32251920_
				coverAll:
					{57 to: 59}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).! !
!Behavior method!
moveForwardPointingToEast
	#_coverageTracker32251940_ markAsExecuted.
	#_coverageTracker32251940_
		cover: (45 to: 56)
		declaredAt: (29 to: 40)
		by:
			(currentPoint _ [ | receiver2 |
			receiver2 _ #_coverageTracker32251940_
				cover: (29 to: 40)
				declaredAt: (29 to: 40)
				by: currentPoint.
			#_coverageTracker32251940_
				coverAll:
					{58 to: 58}
				evaluating: [
					receiver2 +
						[ | receiver1 |
						receiver1 _ #_coverageTracker32251940_
							coverAll:
								{61 to: 61}
							byLiteralOrPseudoVariable: 1.
						#_coverageTracker32251940_
							coverAll:
								{62 to: 62}
							evaluating: [
								receiver1 @
									(#_coverageTracker32251940_
										coverAll:
											{63 to: 63}
										byLiteralOrPseudoVariable: 0) ]
							thatSends: #@
							to: receiver1 ] value ]
				thatSends: #+
				to: receiver2 ] value).! !
!Behavior method!
moveForward: aMarsRover
	#_coverageTracker32251946_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32251946_
		cover: (27 to: 36)
		declaredAt: (14 to: 23)
		by: aMarsRover.
	#_coverageTracker32251946_
		coverAll:
			{38 to: 63}
		evaluating: [ receiver1 moveForwardPointingToSouth ]
		thatSends: #moveForwardPointingToSouth
		to: receiver1 ] value.! !
!Behavior method!
moveForward: aMarsRover
	#_coverageTracker32251957_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32251957_
		cover: (27 to: 36)
		declaredAt: (14 to: 23)
		by: aMarsRover.
	#_coverageTracker32251957_
		coverAll:
			{38 to: 63}
		evaluating: [ receiver1 moveForwardPointingToNorth ]
		thatSends: #moveForwardPointingToNorth
		to: receiver1 ] value.! !
!Behavior method!
rotate90DegreesRightPointingToEast
	#_coverageTracker32251977_ markAsExecuted.
	#_coverageTracker32251977_
		cover: (38 to: 47)
		declaredAt: (38 to: 47)
		by:
			(pointingTo _ [ | receiver1 |
			receiver1 _ #_coverageTracker32251977_
				coverAll:
					{52 to: 56}
				by: South.
			#_coverageTracker32251977_
				coverAll:
					{58 to: 60}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).! !
!Behavior method!
canHandle: aCharCommand
	#_coverageTracker32251988_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker32251988_
		cover: (28 to: 39)
		declaredAt: (12 to: 23)
		by: aCharCommand.
	#_coverageTracker32251988_
		coverAll:
			{41 to: 41}
		evaluating: [
			receiver1 =
				(#_coverageTracker32251988_
					coverAll:
						{43 to: 44}
					byLiteralOrPseudoVariable: $f) ]
		thatSends: #=
		to: receiver1 ] value.! !
!Behavior method!
rotate90DegreesLeft: aMarsRover
	#_coverageTracker32251994_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32251994_
		cover: (35 to: 44)
		declaredAt: (22 to: 31)
		by: aMarsRover.
	#_coverageTracker32251994_
		coverAll:
			{46 to: 78}
		evaluating: [ receiver1 rotate90DegreesLeftPointingToEast ]
		thatSends: #rotate90DegreesLeftPointingToEast
		to: receiver1 ] value.! !
!Behavior method!
rotate90DegreesRightPointingToNorth
	#_coverageTracker32252009_ markAsExecuted.
	#_coverageTracker32252009_
		cover: (39 to: 48)
		declaredAt: (39 to: 48)
		by:
			(pointingTo _ [ | receiver1 |
			receiver1 _ #_coverageTracker32252009_
				coverAll:
					{53 to: 56}
				by: East.
			#_coverageTracker32252009_
				coverAll:
					{58 to: 60}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).! !
!Behavior method!
rotate90DegreesLeftPointingToNorth
	#_coverageTracker32252021_ markAsExecuted.
	#_coverageTracker32252021_
		cover: (38 to: 47)
		declaredAt: (38 to: 47)
		by:
			(pointingTo _ [ | receiver1 |
			receiver1 _ #_coverageTracker32252021_
				coverAll:
					{52 to: 55}
				by: West.
			#_coverageTracker32252021_
				coverAll:
					{57 to: 59}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).! !
!Behavior method!
canHandle: aCharCommand
	#_coverageTracker32252040_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker32252040_
		cover: (28 to: 39)
		declaredAt: (12 to: 23)
		by: aCharCommand.
	#_coverageTracker32252040_
		coverAll:
			{41 to: 41}
		evaluating: [
			receiver1 =
				(#_coverageTracker32252040_
					coverAll:
						{43 to: 44}
					byLiteralOrPseudoVariable: $l) ]
		thatSends: #=
		to: receiver1 ] value.! !
!Behavior method!
moveForwardPointingToWest
	#_coverageTracker32252051_ markAsExecuted.
	#_coverageTracker32252051_
		cover: (45 to: 56)
		declaredAt: (29 to: 40)
		by:
			(currentPoint _ [ | receiver2 |
			receiver2 _ #_coverageTracker32252051_
				cover: (29 to: 40)
				declaredAt: (29 to: 40)
				by: currentPoint.
			#_coverageTracker32252051_
				coverAll:
					{58 to: 58}
				evaluating: [
					receiver2 -
						[ | receiver1 |
						receiver1 _ #_coverageTracker32252051_
							coverAll:
								{61 to: 61}
							byLiteralOrPseudoVariable: 1.
						#_coverageTracker32252051_
							coverAll:
								{62 to: 62}
							evaluating: [
								receiver1 @
									(#_coverageTracker32252051_
										coverAll:
											{63 to: 63}
										byLiteralOrPseudoVariable: 0) ]
							thatSends: #@
							to: receiver1 ] value ]
				thatSends: #-
				to: receiver2 ] value).! !
!Behavior method!
canHandle: aCharCommand
	#_coverageTracker32252072_ markAsExecuted.
	^ [ | receiver5 |
	receiver5 _ [ | receiver1 |
	receiver1 _ #_coverageTracker32252072_
		cover: (29 to: 40)
		declaredAt: (12 to: 23)
		by: aCharCommand.
	#_coverageTracker32252072_
		coverAll:
			{42 to: 43}
		evaluating: [
			receiver1 ~=
				(#_coverageTracker32252072_
					coverAll:
						{45 to: 46}
					byLiteralOrPseudoVariable: $f) ]
		thatSends: #~=
		to: receiver1 ] value.
	#_coverageTracker32252072_
		coverAll:
			{49 to: 52. 80 to: 83. 106 to: 109}
		evaluating: [
			receiver5
				and:
					[ | receiver2 |
					receiver2 _ #_coverageTracker32252072_
						cover: (55 to: 66)
						declaredAt: (12 to: 23)
						by: aCharCommand.
					#_coverageTracker32252072_
						coverAll:
							{68 to: 69}
						evaluating: [
							receiver2 ~=
								(#_coverageTracker32252072_
									coverAll:
										{71 to: 72}
									byLiteralOrPseudoVariable: $b) ]
						thatSends: #~=
						to: receiver2 ] value
				and:
					[ | receiver3 |
					receiver3 _ #_coverageTracker32252072_
						cover: (86 to: 97)
						declaredAt: (12 to: 23)
						by: aCharCommand.
					#_coverageTracker32252072_
						coverAll:
							{99 to: 100}
						evaluating: [
							receiver3 ~=
								(#_coverageTracker32252072_
									coverAll:
										{102 to: 103}
									byLiteralOrPseudoVariable: $l) ]
						thatSends: #~=
						to: receiver3 ] value
				and:
					[ | receiver4 |
					receiver4 _ #_coverageTracker32252072_
						cover: (112 to: 123)
						declaredAt: (12 to: 23)
						by: aCharCommand.
					#_coverageTracker32252072_
						coverAll:
							{125 to: 126}
						evaluating: [
							receiver4 ~=
								(#_coverageTracker32252072_
									coverAll:
										{128 to: 129}
									byLiteralOrPseudoVariable: $r) ]
						thatSends: #~=
						to: receiver4 ] value ]
		thatSends: #and:and:and:
		to: receiver5 ] value.! !
!Behavior method!
canHandle: aCharCommand
	#_coverageTracker32252080_ markAsExecuted.
	^ [ | receiver1 |
	receiver1 _ #_coverageTracker32252080_
		cover: (28 to: 39)
		declaredAt: (12 to: 23)
		by: aCharCommand.
	#_coverageTracker32252080_
		coverAll:
			{41 to: 41}
		evaluating: [
			receiver1 =
				(#_coverageTracker32252080_
					coverAll:
						{43 to: 44}
					byLiteralOrPseudoVariable: $r) ]
		thatSends: #=
		to: receiver1 ] value.! !
!Behavior method!
rotate90DegreesRight: aMarsRover
	#_coverageTracker32252097_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252097_
		cover: (36 to: 45)
		declaredAt: (23 to: 32)
		by: aMarsRover.
	#_coverageTracker32252097_
		coverAll:
			{47 to: 80}
		evaluating: [ receiver1 rotate90DegreesRightPointingToEast ]
		thatSends: #rotate90DegreesRightPointingToEast
		to: receiver1 ] value.! !
!Behavior method!
moveForward: aMarsRover
	#_coverageTracker32252107_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252107_
		cover: (27 to: 36)
		declaredAt: (14 to: 23)
		by: aMarsRover.
	#_coverageTracker32252107_
		coverAll:
			{38 to: 62}
		evaluating: [ receiver1 moveForwardPointingToEast ]
		thatSends: #moveForwardPointingToEast
		to: receiver1 ] value.! !
!Behavior method!
moveBackwards: aMarsRover
	#_coverageTracker32252117_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252117_
		cover: (29 to: 38)
		declaredAt: (16 to: 25)
		by: aMarsRover.
	#_coverageTracker32252117_
		coverAll:
			{40 to: 67}
		evaluating: [ receiver1 moveBackwardsPointingToSouth ]
		thatSends: #moveBackwardsPointingToSouth
		to: receiver1 ] value.! !
!Behavior method!
moveBackwards: aMarsRover
	#_coverageTracker32252132_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252132_
		cover: (29 to: 38)
		declaredAt: (16 to: 25)
		by: aMarsRover.
	#_coverageTracker32252132_
		coverAll:
			{40 to: 67}
		evaluating: [ receiver1 moveBackwardsPointingToNorth ]
		thatSends: #moveBackwardsPointingToNorth
		to: receiver1 ] value.! !
!Behavior method!
rotate90DegreesRightPointingToSouth
	#_coverageTracker32252152_ markAsExecuted.
	#_coverageTracker32252152_
		cover: (39 to: 48)
		declaredAt: (39 to: 48)
		by:
			(pointingTo _ [ | receiver1 |
			receiver1 _ #_coverageTracker32252152_
				coverAll:
					{53 to: 56}
				by: West.
			#_coverageTracker32252152_
				coverAll:
					{58 to: 60}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).! !
!Behavior method!
rotate90DegreesLeft: aMarsRover
	#_coverageTracker32252161_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252161_
		cover: (35 to: 44)
		declaredAt: (22 to: 31)
		by: aMarsRover.
	#_coverageTracker32252161_
		coverAll:
			{46 to: 79}
		evaluating: [ receiver1 rotate90DegreesLeftPointingToSouth ]
		thatSends: #rotate90DegreesLeftPointingToSouth
		to: receiver1 ] value.! !
!Behavior method!
rotate90DegreesRightPointingToWest
	#_coverageTracker32252182_ markAsExecuted.
	#_coverageTracker32252182_
		cover: (38 to: 47)
		declaredAt: (38 to: 47)
		by:
			(pointingTo _ [ | receiver1 |
			receiver1 _ #_coverageTracker32252182_
				coverAll:
					{52 to: 56}
				by: North.
			#_coverageTracker32252182_
				coverAll:
					{58 to: 60}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).! !
!Behavior method!
moveForwardPointingToNorth
	#_coverageTracker32252186_ markAsExecuted.
	#_coverageTracker32252186_
		cover: (46 to: 57)
		declaredAt: (30 to: 41)
		by:
			(currentPoint _ [ | receiver2 |
			receiver2 _ #_coverageTracker32252186_
				cover: (30 to: 41)
				declaredAt: (30 to: 41)
				by: currentPoint.
			#_coverageTracker32252186_
				coverAll:
					{59 to: 59}
				evaluating: [
					receiver2 +
						[ | receiver1 |
						receiver1 _ #_coverageTracker32252186_
							coverAll:
								{62 to: 62}
							byLiteralOrPseudoVariable: 0.
						#_coverageTracker32252186_
							coverAll:
								{63 to: 63}
							evaluating: [
								receiver1 @
									(#_coverageTracker32252186_
										coverAll:
											{64 to: 64}
										byLiteralOrPseudoVariable: 1) ]
							thatSends: #@
							to: receiver1 ] value ]
				thatSends: #+
				to: receiver2 ] value).! !
!Behavior method!
moveBackwardsPointingToWest
	#_coverageTracker32252198_ markAsExecuted.
	#_coverageTracker32252198_
		cover: (47 to: 58)
		declaredAt: (31 to: 42)
		by:
			(currentPoint _ [ | receiver2 |
			receiver2 _ #_coverageTracker32252198_
				cover: (31 to: 42)
				declaredAt: (31 to: 42)
				by: currentPoint.
			#_coverageTracker32252198_
				coverAll:
					{60 to: 60}
				evaluating: [
					receiver2 +
						[ | receiver1 |
						receiver1 _ #_coverageTracker32252198_
							coverAll:
								{63 to: 63}
							byLiteralOrPseudoVariable: 1.
						#_coverageTracker32252198_
							coverAll:
								{64 to: 64}
							evaluating: [
								receiver1 @
									(#_coverageTracker32252198_
										coverAll:
											{65 to: 65}
										byLiteralOrPseudoVariable: 0) ]
							thatSends: #@
							to: receiver1 ] value ]
				thatSends: #+
				to: receiver2 ] value).! !
!Behavior method!
moveForwardPointingToSouth
	#_coverageTracker32252321_ markAsExecuted.
	#_coverageTracker32252321_
		cover: (46 to: 57)
		declaredAt: (30 to: 41)
		by:
			(currentPoint _ [ | receiver2 |
			receiver2 _ #_coverageTracker32252321_
				cover: (30 to: 41)
				declaredAt: (30 to: 41)
				by: currentPoint.
			#_coverageTracker32252321_
				coverAll:
					{59 to: 59}
				evaluating: [
					receiver2 -
						[ | receiver1 |
						receiver1 _ #_coverageTracker32252321_
							coverAll:
								{62 to: 62}
							byLiteralOrPseudoVariable: 0.
						#_coverageTracker32252321_
							coverAll:
								{63 to: 63}
							evaluating: [
								receiver1 @
									(#_coverageTracker32252321_
										coverAll:
											{64 to: 64}
										byLiteralOrPseudoVariable: 1) ]
							thatSends: #@
							to: receiver1 ] value ]
				thatSends: #-
				to: receiver2 ] value).! !
!Behavior method!
rotate90DegreesLeftPointingToSouth
	#_coverageTracker32252337_ markAsExecuted.
	#_coverageTracker32252337_
		cover: (38 to: 47)
		declaredAt: (38 to: 47)
		by:
			(pointingTo _ [ | receiver1 |
			receiver1 _ #_coverageTracker32252337_
				coverAll:
					{52 to: 55}
				by: East.
			#_coverageTracker32252337_
				coverAll:
					{57 to: 59}
				evaluating: [ receiver1 new ]
				thatSends: #new
				to: receiver1 ] value).! !
!Behavior method!
moveBackwardsPointingToEast
	#_coverageTracker32252357_ markAsExecuted.
	#_coverageTracker32252357_
		cover: (47 to: 58)
		declaredAt: (31 to: 42)
		by:
			(currentPoint _ [ | receiver2 |
			receiver2 _ #_coverageTracker32252357_
				cover: (31 to: 42)
				declaredAt: (31 to: 42)
				by: currentPoint.
			#_coverageTracker32252357_
				coverAll:
					{60 to: 60}
				evaluating: [
					receiver2 -
						[ | receiver1 |
						receiver1 _ #_coverageTracker32252357_
							coverAll:
								{63 to: 63}
							byLiteralOrPseudoVariable: 1.
						#_coverageTracker32252357_
							coverAll:
								{64 to: 64}
							evaluating: [
								receiver1 @
									(#_coverageTracker32252357_
										coverAll:
											{65 to: 65}
										byLiteralOrPseudoVariable: 0) ]
							thatSends: #@
							to: receiver1 ] value ]
				thatSends: #-
				to: receiver2 ] value).! !
!Behavior method!
rotate90DegreesLeft: aMarsRover
	#_coverageTracker32252372_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252372_
		cover: (35 to: 44)
		declaredAt: (22 to: 31)
		by: aMarsRover.
	#_coverageTracker32252372_
		coverAll:
			{46 to: 78}
		evaluating: [ receiver1 rotate90DegreesLeftPointingToWest ]
		thatSends: #rotate90DegreesLeftPointingToWest
		to: receiver1 ] value.! !
!Behavior method!
processCommandPointingTo: aCardinalPoint for: aMarsRover
	#_coverageTracker32252391_ markAsExecuted.
	^ #_coverageTracker32252391_
		cover: (61 to: 70)
		declaredAt: (47 to: 56)
		by: aMarsRover.! !
!Behavior method!
processCommand: aCharCommand
	#_coverageTracker32252403_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker32252403_
		coverAll:
			{35 to: 50}
		by: MarsRoverCommand.
	#_coverageTracker32252403_
		coverAll:
			{52 to: 63}
		evaluating: [
			receiver1 aCommandFor:
				(#_coverageTracker32252403_
					cover: (65 to: 76)
					declaredAt: (17 to: 28)
					by: aCharCommand) ]
		thatSends: #aCommandFor:
		to: receiver1 ] value.
	#_coverageTracker32252403_
		coverAll:
			{82 to: 106. 119 to: 122}
		evaluating: [
			receiver2
				processCommandPointingTo:
					(#_coverageTracker32252403_
						cover: (108 to: 117)
						declaredAt: (108 to: 117)
						by: pointingTo)
				for:
					(#_coverageTracker32252403_
						coverAll:
							{124 to: 127}
						byLiteralOrPseudoVariable: self) ]
		thatSends: #processCommandPointingTo:for:
		to: receiver2 ] value.! !
!Behavior method!
moveBackwardsPointingToNorth
	#_coverageTracker32252423_ markAsExecuted.
	#_coverageTracker32252423_
		cover: (48 to: 59)
		declaredAt: (32 to: 43)
		by:
			(currentPoint _ [ | receiver2 |
			receiver2 _ #_coverageTracker32252423_
				cover: (32 to: 43)
				declaredAt: (32 to: 43)
				by: currentPoint.
			#_coverageTracker32252423_
				coverAll:
					{61 to: 61}
				evaluating: [
					receiver2 -
						[ | receiver1 |
						receiver1 _ #_coverageTracker32252423_
							coverAll:
								{64 to: 64}
							byLiteralOrPseudoVariable: 0.
						#_coverageTracker32252423_
							coverAll:
								{65 to: 65}
							evaluating: [
								receiver1 @
									(#_coverageTracker32252423_
										coverAll:
											{66 to: 66}
										byLiteralOrPseudoVariable: 1) ]
							thatSends: #@
							to: receiver1 ] value ]
				thatSends: #-
				to: receiver2 ] value).! !
!Behavior method!
rotate90DegreesRight: aMarsRover
	#_coverageTracker32252433_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252433_
		cover: (36 to: 45)
		declaredAt: (23 to: 32)
		by: aMarsRover.
	#_coverageTracker32252433_
		coverAll:
			{47 to: 81}
		evaluating: [ receiver1 rotate90DegreesRightPointingToSouth ]
		thatSends: #rotate90DegreesRightPointingToSouth
		to: receiver1 ] value.! !
!Behavior method!
moveForward: aMarsRover
	#_coverageTracker32252455_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252455_
		cover: (27 to: 36)
		declaredAt: (14 to: 23)
		by: aMarsRover.
	#_coverageTracker32252455_
		coverAll:
			{38 to: 62}
		evaluating: [ receiver1 moveForwardPointingToWest ]
		thatSends: #moveForwardPointingToWest
		to: receiver1 ] value.! !
!Behavior method!
processCommandPointingTo: aCardinalPoint for: aMarsRover
	#_coverageTracker32252466_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252466_
		cover: (60 to: 73)
		declaredAt: (27 to: 40)
		by: aCardinalPoint.
	#_coverageTracker32252466_
		coverAll:
			{75 to: 88}
		evaluating: [
			receiver1 moveBackwards:
				(#_coverageTracker32252466_
					cover: (90 to: 99)
					declaredAt: (47 to: 56)
					by: aMarsRover) ]
		thatSends: #moveBackwards:
		to: receiver1 ] value.! !
!Behavior method!
processCommandPointingTo: aCardinalPoint for: aMarsRover
	#_coverageTracker32252486_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252486_
		cover: (61 to: 74)
		declaredAt: (27 to: 40)
		by: aCardinalPoint.
	#_coverageTracker32252486_
		coverAll:
			{76 to: 95}
		evaluating: [
			receiver1 rotate90DegreesLeft:
				(#_coverageTracker32252486_
					cover: (97 to: 106)
					declaredAt: (47 to: 56)
					by: aMarsRover) ]
		thatSends: #rotate90DegreesLeft:
		to: receiver1 ] value.! !
!Behavior method!
processCommandPointingTo: aCardinalPoint for: aMarsRover
	#_coverageTracker32252505_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252505_
		cover: (60 to: 73)
		declaredAt: (27 to: 40)
		by: aCardinalPoint.
	#_coverageTracker32252505_
		coverAll:
			{75 to: 95}
		evaluating: [
			receiver1 rotate90DegreesRight:
				(#_coverageTracker32252505_
					cover: (97 to: 106)
					declaredAt: (47 to: 56)
					by: aMarsRover) ]
		thatSends: #rotate90DegreesRight:
		to: receiver1 ] value.! !
!Behavior method!
moveBackwards: aMarsRover
	#_coverageTracker32252520_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252520_
		cover: (29 to: 38)
		declaredAt: (16 to: 25)
		by: aMarsRover.
	#_coverageTracker32252520_
		coverAll:
			{40 to: 66}
		evaluating: [ receiver1 moveBackwardsPointingToWest ]
		thatSends: #moveBackwardsPointingToWest
		to: receiver1 ] value.! !
!Behavior method!
aCommandFor: aCharCommand
	#_coverageTracker32252538_ markAsExecuted.
	^ [ | receiver4 |
	receiver4 _ [ | receiver3 |
	receiver3 _ [ | receiver1 |
	receiver1 _ #_coverageTracker32252538_
		coverAll:
			{32 to: 35}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker32252538_
		coverAll:
			{37 to: 46}
		evaluating: [ receiver1 subclasses ]
		thatSends: #subclasses
		to: receiver1 ] value.
	#_coverageTracker32252538_
		coverAll:
			{48 to: 54}
		evaluating: [
			receiver3 detect: [ :aMarsRoverCommandClass |
				[ | receiver2 |
				receiver2 _ #_coverageTracker32252538_
					cover: (83 to: 104)
					declaredAt: (58 to: 79)
					by: aMarsRoverCommandClass.
				#_coverageTracker32252538_
					coverAll:
						{106 to: 115}
					evaluating: [
						receiver2 canHandle:
							(#_coverageTracker32252538_
								cover: (117 to: 128)
								declaredAt: (14 to: 25)
								by: aCharCommand) ]
					thatSends: #canHandle:
					to: receiver2 ] value ]]
		thatSends: #detect:
		to: receiver3 ] value.
	#_coverageTracker32252538_
		coverAll:
			{133 to: 135}
		evaluating: [ receiver4 new ]
		thatSends: #new
		to: receiver4 ] value.! !
!Behavior method!
rotate90DegreesLeft: aMarsRover
	#_coverageTracker32252558_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252558_
		cover: (35 to: 44)
		declaredAt: (22 to: 31)
		by: aMarsRover.
	#_coverageTracker32252558_
		coverAll:
			{46 to: 79}
		evaluating: [ receiver1 rotate90DegreesLeftPointingToNorth ]
		thatSends: #rotate90DegreesLeftPointingToNorth
		to: receiver1 ] value.! !
!Behavior method!
rotate90DegreesRight: aMarsRover
	#_coverageTracker32252594_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252594_
		cover: (36 to: 45)
		declaredAt: (23 to: 32)
		by: aMarsRover.
	#_coverageTracker32252594_
		coverAll:
			{47 to: 81}
		evaluating: [ receiver1 rotate90DegreesRightPointingToNorth ]
		thatSends: #rotate90DegreesRightPointingToNorth
		to: receiver1 ] value.! !
!Behavior method!
rotate90DegreesRight: aMarsRover
	#_coverageTracker32252609_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252609_
		cover: (36 to: 45)
		declaredAt: (23 to: 32)
		by: aMarsRover.
	#_coverageTracker32252609_
		coverAll:
			{47 to: 80}
		evaluating: [ receiver1 rotate90DegreesRightPointingToWest ]
		thatSends: #rotate90DegreesRightPointingToWest
		to: receiver1 ] value.! !
!Behavior method!
moveBackwards: aMarsRover
	#_coverageTracker32252627_ markAsExecuted.
	[ | receiver1 |
	receiver1 _ #_coverageTracker32252627_
		cover: (29 to: 38)
		declaredAt: (16 to: 25)
		by: aMarsRover.
	#_coverageTracker32252627_
		coverAll:
			{40 to: 66}
		evaluating: [ receiver1 moveBackwardsPointingToEast ]
		thatSends: #moveBackwardsPointingToEast
		to: receiver1 ] value.! !
!Behavior method!
processCommandList: aProcessCommandList
	#_coverageTracker32252640_ markAsExecuted.
	[ | receiver2 |
	receiver2 _ #_coverageTracker32252640_
		cover: (45 to: 63)
		declaredAt: (21 to: 39)
		by: aProcessCommandList.
	#_coverageTracker32252640_
		coverAll:
			{65 to: 67}
		evaluating: [
			receiver2 do: [ :aCommand |
				[ | receiver1 |
				receiver1 _ #_coverageTracker32252640_
					coverAll:
						{86 to: 89}
					byLiteralOrPseudoVariable: self.
				#_coverageTracker32252640_
					coverAll:
						{91 to: 105}
					evaluating: [
						receiver1 processCommand:
							(#_coverageTracker32252640_
								cover: (107 to: 114)
								declaredAt: (74 to: 81)
								by: aCommand) ]
					thatSends: #processCommand:
					to: receiver1 ] value ]]
		thatSends: #do:
		to: receiver2 ] value.! !
!Behavior method!
at: anInitialPoint pointingTo: aCardinalPoint
	#_coverageTracker32252657_ markAsExecuted.
	^ [ | receiver2 |
	receiver2 _ [ | receiver1 |
	receiver1 _ #_coverageTracker32252657_
		coverAll:
			{51 to: 54}
		byLiteralOrPseudoVariable: self.
	#_coverageTracker32252657_
		coverAll:
			{56 to: 58}
		evaluating: [ receiver1 new ]
		thatSends: #new
		to: receiver1 ] value.
	#_coverageTracker32252657_
		coverAll:
			{60 to: 62. 79 to: 89}
		evaluating: [
			receiver2
				at:
					(#_coverageTracker32252657_
						cover: (64 to: 77)
						declaredAt: (5 to: 18)
						by: anInitialPoint)
				pointingTo:
					(#_coverageTracker32252657_
						cover: (91 to: 104)
						declaredAt: (32 to: 45)
						by: aCardinalPoint) ]
		thatSends: #at:pointingTo:
		to: receiver2 ] value.! !

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 01:54:57'!
PASSED!
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/9/2023 01:56:14' prior: 50661082!
processCommand: aCharCommand
	
	(MarsRoverCommand aCommandFor: aCharCommand) 
		processCommandPointingTo: pointingTo for: self! !
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/9/2023 01:58:45' prior: 50660551!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: 
		[:aCommand |  
			(self wrongCommand: aCommand) ifTrue: [^self].
			self processCommand: aCommand]
	! !
!MarsRover methodsFor: 'assertions' stamp: 'UNS 10/9/2023 01:59:02'!
isAWrongCommand: aCharCommand! !
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/9/2023 01:59:14' prior: 50662007!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: 
		[:aCommand |  
			(self isAWrongCommand: aCommand) ifTrue: [^self].
			self processCommand: aCommand]
	! !
!MarsRover methodsFor: 'assertions' stamp: 'UNS 10/9/2023 01:59:45' prior: 50662015!
isAWrongCommand: aCharCommand

	^(aCharCommand ~= $f) and: (aCharCommand ~= $b) 
	   and: (aCharCommand ~= $l) and: (aCharCommand ~= $r)! !
!MarsRover methodsFor: 'processing' stamp: 'UNS 10/9/2023 02:00:13' prior: 50662019!
processCommandList: aProcessCommandList 
	
	aProcessCommandList do: 
		[:aCommand |  
			(self isAWrongCommand: aCommand) ifTrue: [^self].
			 self processCommand: aCommand]
	! !

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 02:02:16'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 02:02:19'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 02:02:22'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 02:02:27'!
PASSED!

----SNAPSHOT----(9 October 2023 02:04:53) CuisUniversity-5981.image priorSource: 10398430!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 02:08:15'!
PASSED!

----SNAPSHOT----(9 October 2023 02:09:18) CuisUniversity-5981.image priorSource: 10577581!

----SNAPSHOT----(9 October 2023 02:13:13) CuisUniversity-5981.image priorSource: 10580058!

----QUIT----(9 October 2023 02:13:28) CuisUniversity-5981.image priorSource: 10580150!

----STARTUP---- (9 October 2023 02:13:44) as C:\Users\Uriel\Desktop\URI\INGE I\TDD Mars Rover\windows64\CuisUniversity-5981.image!


!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 02:13:54'!
PASSED!

----QUIT----(9 October 2023 02:14:17) CuisUniversity-5981.image priorSource: 10580242!

----STARTUP---- (9 October 2023 16:17:40) as /home/clinux01/Descargas/linux64/linux64/CuisUniversity-5981.image!


!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 16:18:15'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 16:18:17'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'UNS 10/9/2023 16:20:09'!
test06MarsRoverPointsToWestAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: West).
	! !

!methodRemoval: MarsRoverTest #test06MarsRoverPointsToWestWhenProcessingCommandL stamp: 'UNS 10/9/2023 16:20:09'!
test06MarsRoverPointsToWestWhenProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'l'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: West).
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'UNS 10/9/2023 16:22:20'!
test07MarsRoverMovesForwardPointingToWestAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: West).
	! !

!methodRemoval: MarsRoverTest #test07MarsRoverMovesForwardToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:22:20'!
test07MarsRoverMovesForwardToWestAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lf'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: West).
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'UNS 10/9/2023 16:23:06'!
test08MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lb'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: West).
	! !

!methodRemoval: MarsRoverTest #test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:23:06'!
test08MarsRoverMovesBackwardsToEastAfterProcessingCommandL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'lb'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: West).
	!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardPointingToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 16:23:08'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'UNS 10/9/2023 16:23:24'!
test09MarsRoverPointsToEastAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'r'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: East).
	! !

!methodRemoval: MarsRoverTest #test09MarsRoverPointsToEastWhenProcessingCommandR stamp: 'UNS 10/9/2023 16:23:24'!
test09MarsRoverPointsToEastWhenProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'r'.
	
	self assert: (aMarsRover isAt: 0@0 pointingTo: East).
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'UNS 10/9/2023 16:23:37'!
test10MarsRoverMovesForwardPointingToEastAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rf'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: East).
	! !

!methodRemoval: MarsRoverTest #test10MarsRoverMovesForwardToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:23:37'!
test10MarsRoverMovesForwardToEastAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rf'.
	
	self assert: (aMarsRover isAt: 1@0 pointingTo: East).
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'UNS 10/9/2023 16:23:50'!
test11MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rb'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: East).
	! !

!methodRemoval: MarsRoverTest #test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:23:50'!
test11MarsRoverMovesBackwardsToWestAfterProcessingCommandR
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rb'.
	
	self assert: (aMarsRover isAt: -1@0 pointingTo: East).
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'UNS 10/9/2023 16:24:14'!
test13MarsRoverMovesForwardPointingToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llf'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: South).
	! !

!methodRemoval: MarsRoverTest #test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:24:14'!
test13MarsRoverMovesForwardToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llf'.
	
	self assert: (aMarsRover isAt: 0@-1 pointingTo: South).
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'UNS 10/9/2023 16:24:33'!
test14MarsRoverMovesBackwardsPointingToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llb'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: South).
	! !

!methodRemoval: MarsRoverTest #test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:24:33'!
test14MarsRoverMovesBackwardsToSouthAfterProcessingEvenNumberOfCommandsL
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'llb'.
	
	self assert: (aMarsRover isAt: 0@1 pointingTo: South).
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'UNS 10/9/2023 16:25:34' prior: 50661020!
test21MarsRoverGeneralizationTest
	
	|aMarsRover anInitialPoint aCardinalPoint|
	
	anInitialPoint := 0@0.
	aCardinalPoint  := North new.
		
	aMarsRover := MarsRover at: anInitialPoint pointingTo: aCardinalPoint. 
	
	aMarsRover processCommandList: 'rrffflbbbblffabb'.
	
	aMarsRover processCommandList: 'rrrrllll'.
	
	self assert: (aMarsRover isAt: -4@-1 pointingTo: North).
	! !

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardPointingToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardPointingToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardPointingToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsPointingToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 16:25:35'!
PASSED!

----SNAPSHOT----(9 October 2023 16:26:29) CuisUniversity-5981.image priorSource: 10582848!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardPointingToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardPointingToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardPointingToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsPointingToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 16:36:41'!
PASSED!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardPointingToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardPointingToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardPointingToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsPointingToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 16:42:53'!
PASSED!

----SNAPSHOT----(9 October 2023 16:44:30) CuisUniversity-5981.image priorSource: 10598274!

----SNAPSHOT----(9 October 2023 16:45:29) CuisUniversity-5981.image priorSource: 10603236!

!testRun: #MarsRoverTest #test01MarsRoverDoesNotMoveWhenProcessingEmptyCommandList stamp: 'UNS 10/9/2023 16:45:37'!
PASSED!

!testRun: #MarsRoverTest #test03MarsRoverMovesForwardWhenProcessingCommandListWithFs stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test05MarsRoverMovesBackwardsWhenProcessingCommandListWithBs stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test06MarsRoverPointsToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test07MarsRoverMovesForwardPointingToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test08MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test09MarsRoverPointsToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test10MarsRoverMovesForwardPointingToEastAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test11MarsRoverMovesBackwardsPointingToWestAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test12MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test13MarsRoverMovesForwardPointingToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test14MarsRoverMovesBackwardsPointingToSouthAfterProcessingEvenNumberOfCommandsL stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test15MarsRoverPointsToSouthAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverPointsToNorthAfterProcessingCommandL stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test17MarsRoverPointsToNorthAfterProcessingCommandR stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test18MarsRoverPointsToWestAfterProcessingEvenNumberOfCommandL stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverPointsToEastAfterProcessingEvenNumberOfCommandR stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverStopProcessingAfterWrongCommand stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverGeneralizationTest stamp: 'UNS 10/9/2023 16:45:38'!
PASSED!

----QUIT----(9 October 2023 16:45:42) CuisUniversity-5981.image priorSource: 10603328!